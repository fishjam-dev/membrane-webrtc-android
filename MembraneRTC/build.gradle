plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-kapt"
    id 'maven-publish'
    id 'org.jetbrains.dokka'
}

group = 'com.github.membraneframework'
version = '2.0.0'

android {
    namespace = "org.membraneframework.rtc"
    compileSdkVersion androidSdk.compileVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion androidSdk.minVersion
        targetSdkVersion androidSdk.targetVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes", "-Xopt-in=kotlin.RequiresOptIn"]
        jvmTarget = java_version
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.dagger:dagger:2.38'
    kapt 'com.google.dagger:dagger-compiler:2.38'
    implementation deps.coroutines.lib
    implementation deps.timber
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.github.dsrees:JavaPhoenixClient:1.0.0'
    api 'io.github.webrtc-sdk:android:104.5112.09'
    implementation 'androidx.core:core:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "io.mockk:mockk:1.13.2"
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
}

ext {
    customLogoFile = projectDir.toString() + "/../docs/logo-icon.svg"
    customFooterMessage = "Copyright 2022, Software Mansion."
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.membraneframework'
                artifactId = 'membrane-webrtc-android'
                version = '1.0'
            }
        }
    }
    tasks.named("dokkaHtml") {
        pluginsMapConfiguration.set([
            "org.jetbrains.dokka.base.DokkaBase": """{
                "footerMessage": "$customFooterMessage",
                "customAssets": ["$customLogoFile"]
            }"""
        ])
    }

}

tasks.named("dokkaHtml") {
    moduleName.set("MembraneRTC")
    dokkaSourceSets {
        named("main") {
            includes.from("module.md")
        }
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"