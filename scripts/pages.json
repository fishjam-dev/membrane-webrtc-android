[{"name":"Candidate","description":"org.membraneframework.rtc.events.ReceivableEventType.Candidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-candidate/index.html","searchKeys":["Candidate","Candidate","org.membraneframework.rtc.events.ReceivableEventType.Candidate"]},{"name":"Custom","description":"org.membraneframework.rtc.events.ReceivableEventType.Custom","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-custom/index.html","searchKeys":["Custom","Custom","org.membraneframework.rtc.events.ReceivableEventType.Custom"]},{"name":"H","description":"org.membraneframework.rtc.TrackEncoding.H","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/-h/index.html","searchKeys":["H","H","org.membraneframework.rtc.TrackEncoding.H"]},{"name":"HARDWARE","description":"org.membraneframework.rtc.EncoderType.HARDWARE","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-type/-h-a-r-d-w-a-r-e/index.html","searchKeys":["HARDWARE","HARDWARE","org.membraneframework.rtc.EncoderType.HARDWARE"]},{"name":"L","description":"org.membraneframework.rtc.TrackEncoding.L","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/-l/index.html","searchKeys":["L","L","org.membraneframework.rtc.TrackEncoding.L"]},{"name":"M","description":"org.membraneframework.rtc.TrackEncoding.M","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/-m/index.html","searchKeys":["M","M","org.membraneframework.rtc.TrackEncoding.M"]},{"name":"OfferData","description":"org.membraneframework.rtc.events.ReceivableEventType.OfferData","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-offer-data/index.html","searchKeys":["OfferData","OfferData","org.membraneframework.rtc.events.ReceivableEventType.OfferData"]},{"name":"PeerAccepted","description":"org.membraneframework.rtc.events.ReceivableEventType.PeerAccepted","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-peer-accepted/index.html","searchKeys":["PeerAccepted","PeerAccepted","org.membraneframework.rtc.events.ReceivableEventType.PeerAccepted"]},{"name":"PeerDenied","description":"org.membraneframework.rtc.events.ReceivableEventType.PeerDenied","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-peer-denied/index.html","searchKeys":["PeerDenied","PeerDenied","org.membraneframework.rtc.events.ReceivableEventType.PeerDenied"]},{"name":"PeerJoined","description":"org.membraneframework.rtc.events.ReceivableEventType.PeerJoined","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-peer-joined/index.html","searchKeys":["PeerJoined","PeerJoined","org.membraneframework.rtc.events.ReceivableEventType.PeerJoined"]},{"name":"PeerLeft","description":"org.membraneframework.rtc.events.ReceivableEventType.PeerLeft","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-peer-left/index.html","searchKeys":["PeerLeft","PeerLeft","org.membraneframework.rtc.events.ReceivableEventType.PeerLeft"]},{"name":"PeerUpdated","description":"org.membraneframework.rtc.events.ReceivableEventType.PeerUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-peer-updated/index.html","searchKeys":["PeerUpdated","PeerUpdated","org.membraneframework.rtc.events.ReceivableEventType.PeerUpdated"]},{"name":"SOFTWARE","description":"org.membraneframework.rtc.EncoderType.SOFTWARE","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-type/-s-o-f-t-w-a-r-e/index.html","searchKeys":["SOFTWARE","SOFTWARE","org.membraneframework.rtc.EncoderType.SOFTWARE"]},{"name":"SdpAnswer","description":"org.membraneframework.rtc.events.ReceivableEventType.SdpAnswer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-sdp-answer/index.html","searchKeys":["SdpAnswer","SdpAnswer","org.membraneframework.rtc.events.ReceivableEventType.SdpAnswer"]},{"name":"TrackUpdated","description":"org.membraneframework.rtc.events.ReceivableEventType.TrackUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-track-updated/index.html","searchKeys":["TrackUpdated","TrackUpdated","org.membraneframework.rtc.events.ReceivableEventType.TrackUpdated"]},{"name":"TracksAdded","description":"org.membraneframework.rtc.events.ReceivableEventType.TracksAdded","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-tracks-added/index.html","searchKeys":["TracksAdded","TracksAdded","org.membraneframework.rtc.events.ReceivableEventType.TracksAdded"]},{"name":"TracksRemoved","description":"org.membraneframework.rtc.events.ReceivableEventType.TracksRemoved","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/-tracks-removed/index.html","searchKeys":["TracksRemoved","TracksRemoved","org.membraneframework.rtc.events.ReceivableEventType.TracksRemoved"]},{"name":"abstract fun capturer(): VideoCapturer","description":"org.membraneframework.rtc.media.Capturer.capturer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-capturer/capturer.html","searchKeys":["capturer","abstract fun capturer(): VideoCapturer","org.membraneframework.rtc.media.Capturer.capturer"]},{"name":"abstract fun enabled(): Boolean","description":"org.membraneframework.rtc.media.LocalTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-track/enabled.html","searchKeys":["enabled","abstract fun enabled(): Boolean","org.membraneframework.rtc.media.LocalTrack.enabled"]},{"name":"abstract fun enabled(): Boolean","description":"org.membraneframework.rtc.media.RemoteTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-track/enabled.html","searchKeys":["enabled","abstract fun enabled(): Boolean","org.membraneframework.rtc.media.RemoteTrack.enabled"]},{"name":"abstract fun id(): String","description":"org.membraneframework.rtc.media.MediaTrackProvider.id","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-media-track-provider/id.html","searchKeys":["id","abstract fun id(): String","org.membraneframework.rtc.media.MediaTrackProvider.id"]},{"name":"abstract fun onClose()","description":"org.membraneframework.rtc.transport.EventTransportListener.onClose","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-listener/on-close.html","searchKeys":["onClose","abstract fun onClose()","org.membraneframework.rtc.transport.EventTransportListener.onClose"]},{"name":"abstract fun onConnected()","description":"org.membraneframework.rtc.MembraneRTCListener.onConnected","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-connected.html","searchKeys":["onConnected","abstract fun onConnected()","org.membraneframework.rtc.MembraneRTCListener.onConnected"]},{"name":"abstract fun onError(error: EventTransportError)","description":"org.membraneframework.rtc.transport.EventTransportListener.onError","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-listener/on-error.html","searchKeys":["onError","abstract fun onError(error: EventTransportError)","org.membraneframework.rtc.transport.EventTransportListener.onError"]},{"name":"abstract fun onError(error: MembraneRTCError)","description":"org.membraneframework.rtc.MembraneRTCListener.onError","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-error.html","searchKeys":["onError","abstract fun onError(error: MembraneRTCError)","org.membraneframework.rtc.MembraneRTCListener.onError"]},{"name":"abstract fun onEvent(event: ReceivableEvent)","description":"org.membraneframework.rtc.transport.EventTransportListener.onEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-listener/on-event.html","searchKeys":["onEvent","abstract fun onEvent(event: ReceivableEvent)","org.membraneframework.rtc.transport.EventTransportListener.onEvent"]},{"name":"abstract fun onJoinError(metadata: Any)","description":"org.membraneframework.rtc.MembraneRTCListener.onJoinError","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-join-error.html","searchKeys":["onJoinError","abstract fun onJoinError(metadata: Any)","org.membraneframework.rtc.MembraneRTCListener.onJoinError"]},{"name":"abstract fun onJoinSuccess(peerID: String, peersInRoom: List<Peer>)","description":"org.membraneframework.rtc.MembraneRTCListener.onJoinSuccess","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-join-success.html","searchKeys":["onJoinSuccess","abstract fun onJoinSuccess(peerID: String, peersInRoom: List<Peer>)","org.membraneframework.rtc.MembraneRTCListener.onJoinSuccess"]},{"name":"abstract fun onPeerJoined(peer: Peer)","description":"org.membraneframework.rtc.MembraneRTCListener.onPeerJoined","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-peer-joined.html","searchKeys":["onPeerJoined","abstract fun onPeerJoined(peer: Peer)","org.membraneframework.rtc.MembraneRTCListener.onPeerJoined"]},{"name":"abstract fun onPeerLeft(peer: Peer)","description":"org.membraneframework.rtc.MembraneRTCListener.onPeerLeft","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-peer-left.html","searchKeys":["onPeerLeft","abstract fun onPeerLeft(peer: Peer)","org.membraneframework.rtc.MembraneRTCListener.onPeerLeft"]},{"name":"abstract fun onPeerUpdated(peer: Peer)","description":"org.membraneframework.rtc.MembraneRTCListener.onPeerUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-peer-updated.html","searchKeys":["onPeerUpdated","abstract fun onPeerUpdated(peer: Peer)","org.membraneframework.rtc.MembraneRTCListener.onPeerUpdated"]},{"name":"abstract fun onTrackAdded(ctx: TrackContext)","description":"org.membraneframework.rtc.MembraneRTCListener.onTrackAdded","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-track-added.html","searchKeys":["onTrackAdded","abstract fun onTrackAdded(ctx: TrackContext)","org.membraneframework.rtc.MembraneRTCListener.onTrackAdded"]},{"name":"abstract fun onTrackReady(ctx: TrackContext)","description":"org.membraneframework.rtc.MembraneRTCListener.onTrackReady","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-track-ready.html","searchKeys":["onTrackReady","abstract fun onTrackReady(ctx: TrackContext)","org.membraneframework.rtc.MembraneRTCListener.onTrackReady"]},{"name":"abstract fun onTrackRemoved(ctx: TrackContext)","description":"org.membraneframework.rtc.MembraneRTCListener.onTrackRemoved","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-track-removed.html","searchKeys":["onTrackRemoved","abstract fun onTrackRemoved(ctx: TrackContext)","org.membraneframework.rtc.MembraneRTCListener.onTrackRemoved"]},{"name":"abstract fun onTrackUpdated(ctx: TrackContext)","description":"org.membraneframework.rtc.MembraneRTCListener.onTrackUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/on-track-updated.html","searchKeys":["onTrackUpdated","abstract fun onTrackUpdated(ctx: TrackContext)","org.membraneframework.rtc.MembraneRTCListener.onTrackUpdated"]},{"name":"abstract fun rtcTrack(): MediaStreamTrack","description":"org.membraneframework.rtc.media.MediaTrackProvider.rtcTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-media-track-provider/rtc-track.html","searchKeys":["rtcTrack","abstract fun rtcTrack(): MediaStreamTrack","org.membraneframework.rtc.media.MediaTrackProvider.rtcTrack"]},{"name":"abstract fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.LocalTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-track/set-enabled.html","searchKeys":["setEnabled","abstract fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.LocalTrack.setEnabled"]},{"name":"abstract fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.RemoteTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-track/set-enabled.html","searchKeys":["setEnabled","abstract fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.RemoteTrack.setEnabled"]},{"name":"abstract fun start()","description":"org.membraneframework.rtc.media.LocalTrack.start","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-track/start.html","searchKeys":["start","abstract fun start()","org.membraneframework.rtc.media.LocalTrack.start"]},{"name":"abstract fun startCapture()","description":"org.membraneframework.rtc.media.Capturer.startCapture","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-capturer/start-capture.html","searchKeys":["startCapture","abstract fun startCapture()","org.membraneframework.rtc.media.Capturer.startCapture"]},{"name":"abstract fun stop()","description":"org.membraneframework.rtc.media.LocalTrack.stop","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-track/stop.html","searchKeys":["stop","abstract fun stop()","org.membraneframework.rtc.media.LocalTrack.stop"]},{"name":"abstract fun stopCapture()","description":"org.membraneframework.rtc.media.Capturer.stopCapture","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-capturer/stop-capture.html","searchKeys":["stopCapture","abstract fun stopCapture()","org.membraneframework.rtc.media.Capturer.stopCapture"]},{"name":"abstract suspend fun connect(listener: EventTransportListener)","description":"org.membraneframework.rtc.transport.EventTransport.connect","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport/connect.html","searchKeys":["connect","abstract suspend fun connect(listener: EventTransportListener)","org.membraneframework.rtc.transport.EventTransport.connect"]},{"name":"abstract suspend fun disconnect()","description":"org.membraneframework.rtc.transport.EventTransport.disconnect","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport/disconnect.html","searchKeys":["disconnect","abstract suspend fun disconnect()","org.membraneframework.rtc.transport.EventTransport.disconnect"]},{"name":"abstract suspend fun send(event: SendableEvent)","description":"org.membraneframework.rtc.transport.EventTransport.send","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport/send.html","searchKeys":["send","abstract suspend fun send(event: SendableEvent)","org.membraneframework.rtc.transport.EventTransport.send"]},{"name":"class BandwidthLimit(val limit: Int) : TrackBandwidthLimit","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-bandwidth-limit/index.html","searchKeys":["BandwidthLimit","class BandwidthLimit(val limit: Int) : TrackBandwidthLimit","org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit"]},{"name":"class CameraCapturer(context: Context, source: VideoSource, rootEglBase: EglBase, videoParameters: VideoParameters) : Capturer, CameraVideoCapturer.CameraSwitchHandler","description":"org.membraneframework.rtc.media.CameraCapturer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/index.html","searchKeys":["CameraCapturer","class CameraCapturer(context: Context, source: VideoSource, rootEglBase: EglBase, videoParameters: VideoParameters) : Capturer, CameraVideoCapturer.CameraSwitchHandler","org.membraneframework.rtc.media.CameraCapturer"]},{"name":"class Constants","description":"org.membraneframework.rtc.Constants","location":"-membrane-r-t-c/org.membraneframework.rtc/-constants/index.html","searchKeys":["Constants","class Constants","org.membraneframework.rtc.Constants"]},{"name":"class CustomEvent<Event : ReceivableEvent>(val type: ReceivableEventType, val data: Event)","description":"org.membraneframework.rtc.events.CustomEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-custom-event/index.html","searchKeys":["CustomEvent","class CustomEvent<Event : ReceivableEvent>(val type: ReceivableEventType, val data: Event)","org.membraneframework.rtc.events.CustomEvent"]},{"name":"class LocalAudioTrack(var mediaTrack: AudioTrack) : AudioTrack, LocalTrack","description":"org.membraneframework.rtc.media.LocalAudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/index.html","searchKeys":["LocalAudioTrack","class LocalAudioTrack(var mediaTrack: AudioTrack) : AudioTrack, LocalTrack","org.membraneframework.rtc.media.LocalAudioTrack"]},{"name":"class LocalScreencastTrack(mediaTrack: VideoTrack, context: Context, eglBase: EglBase, capturer: ScreenCapturerAndroid, val videoParameters: VideoParameters, callback: LocalScreencastTrack.ProjectionCallback) : VideoTrack, LocalTrack","description":"org.membraneframework.rtc.media.LocalScreencastTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/index.html","searchKeys":["LocalScreencastTrack","class LocalScreencastTrack(mediaTrack: VideoTrack, context: Context, eglBase: EglBase, capturer: ScreenCapturerAndroid, val videoParameters: VideoParameters, callback: LocalScreencastTrack.ProjectionCallback) : VideoTrack, LocalTrack","org.membraneframework.rtc.media.LocalScreencastTrack"]},{"name":"class LocalVideoTrack(mediaTrack: VideoTrack, capturer: Capturer, eglBase: EglBase, val videoParameters: VideoParameters) : VideoTrack, LocalTrack","description":"org.membraneframework.rtc.media.LocalVideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/index.html","searchKeys":["LocalVideoTrack","class LocalVideoTrack(mediaTrack: VideoTrack, capturer: Capturer, eglBase: EglBase, val videoParameters: VideoParameters) : VideoTrack, LocalTrack","org.membraneframework.rtc.media.LocalVideoTrack"]},{"name":"class MembraneRTC","description":"org.membraneframework.rtc.MembraneRTC","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/index.html","searchKeys":["MembraneRTC","class MembraneRTC","org.membraneframework.rtc.MembraneRTC"]},{"name":"class PhoenixTransport(url: String, topic: String, ioDispatcher: CoroutineDispatcher, params: SocketConnectionParams? = emptyMap()) : EventTransport","description":"org.membraneframework.rtc.transport.PhoenixTransport","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-phoenix-transport/index.html","searchKeys":["PhoenixTransport","class PhoenixTransport(url: String, topic: String, ioDispatcher: CoroutineDispatcher, params: SocketConnectionParams? = emptyMap()) : EventTransport","org.membraneframework.rtc.transport.PhoenixTransport"]},{"name":"class ProjectionCallback : MediaProjection.Callback","description":"org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-projection-callback/index.html","searchKeys":["ProjectionCallback","class ProjectionCallback : MediaProjection.Callback","org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback"]},{"name":"class RemoteAudioTrack(mediaTrack: AudioTrack) : AudioTrack, RemoteTrack","description":"org.membraneframework.rtc.media.RemoteAudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-audio-track/index.html","searchKeys":["RemoteAudioTrack","class RemoteAudioTrack(mediaTrack: AudioTrack) : AudioTrack, RemoteTrack","org.membraneframework.rtc.media.RemoteAudioTrack"]},{"name":"class RemoteVideoTrack(mediaTrack: VideoTrack, eglBase: EglBase) : VideoTrack, RemoteTrack","description":"org.membraneframework.rtc.media.RemoteVideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-video-track/index.html","searchKeys":["RemoteVideoTrack","class RemoteVideoTrack(mediaTrack: VideoTrack, eglBase: EglBase) : VideoTrack, RemoteTrack","org.membraneframework.rtc.media.RemoteVideoTrack"]},{"name":"class SimulcastBandwidthLimit(val limit: Map<String, TrackBandwidthLimit.BandwidthLimit>) : TrackBandwidthLimit","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-simulcast-bandwidth-limit/index.html","searchKeys":["SimulcastBandwidthLimit","class SimulcastBandwidthLimit(val limit: Map<String, TrackBandwidthLimit.BandwidthLimit>) : TrackBandwidthLimit","org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit"]},{"name":"class VideoTextureViewRenderer : TextureView, SurfaceHolder.Callback, TextureView.SurfaceTextureListener, VideoSink, RendererCommon.RendererEvents","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/index.html","searchKeys":["VideoTextureViewRenderer","class VideoTextureViewRenderer : TextureView, SurfaceHolder.Callback, TextureView.SurfaceTextureListener, VideoSink, RendererCommon.RendererEvents","org.membraneframework.rtc.ui.VideoTextureViewRenderer"]},{"name":"data class BaseCustomEvent(val type: ReceivableEventType, val data: BaseCustomEvent.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.BaseCustomEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/index.html","searchKeys":["BaseCustomEvent","data class BaseCustomEvent(val type: ReceivableEventType, val data: BaseCustomEvent.Data) : ReceivableEvent","org.membraneframework.rtc.events.BaseCustomEvent"]},{"name":"data class ConnectOptions(val transport: EventTransport, val config: Metadata, val encoderOptions: EncoderOptions = EncoderOptions())","description":"org.membraneframework.rtc.ConnectOptions","location":"-membrane-r-t-c/org.membraneframework.rtc/-connect-options/index.html","searchKeys":["ConnectOptions","data class ConnectOptions(val transport: EventTransport, val config: Metadata, val encoderOptions: EncoderOptions = EncoderOptions())","org.membraneframework.rtc.ConnectOptions"]},{"name":"data class ConnectionError(val reason: String) : EventTransportError","description":"org.membraneframework.rtc.transport.EventTransportError.ConnectionError","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-connection-error/index.html","searchKeys":["ConnectionError","data class ConnectionError(val reason: String) : EventTransportError","org.membraneframework.rtc.transport.EventTransportError.ConnectionError"]},{"name":"data class Data(val candidate: String, val sdpMLineIndex: Int, val sdpMid: String?)","description":"org.membraneframework.rtc.events.RemoteCandidate.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-data/index.html","searchKeys":["Data","data class Data(val candidate: String, val sdpMLineIndex: Int, val sdpMid: String?)","org.membraneframework.rtc.events.RemoteCandidate.Data"]},{"name":"data class Data(val id: String, val peersInRoom: List<Peer>)","description":"org.membraneframework.rtc.events.PeerAccepted.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/-data/index.html","searchKeys":["Data","data class Data(val id: String, val peersInRoom: List<Peer>)","org.membraneframework.rtc.events.PeerAccepted.Data"]},{"name":"data class Data(val integratedTurnServers: List<OfferData.TurnServer>, val tracksTypes: Map<String, Int>)","description":"org.membraneframework.rtc.events.OfferData.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-data/index.html","searchKeys":["Data","data class Data(val integratedTurnServers: List<OfferData.TurnServer>, val tracksTypes: Map<String, Int>)","org.membraneframework.rtc.events.OfferData.Data"]},{"name":"data class Data(val metadata: Metadata)","description":"org.membraneframework.rtc.events.Join.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/-data/index.html","searchKeys":["Data","data class Data(val metadata: Metadata)","org.membraneframework.rtc.events.Join.Data"]},{"name":"data class Data(val metadata: Metadata)","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/-data/index.html","searchKeys":["Data","data class Data(val metadata: Metadata)","org.membraneframework.rtc.events.UpdatePeerMetadata.Data"]},{"name":"data class Data(val peer: Peer)","description":"org.membraneframework.rtc.events.PeerJoined.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/-data/index.html","searchKeys":["Data","data class Data(val peer: Peer)","org.membraneframework.rtc.events.PeerJoined.Data"]},{"name":"data class Data(val peerId: String)","description":"org.membraneframework.rtc.events.PeerLeft.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/-data/index.html","searchKeys":["Data","data class Data(val peerId: String)","org.membraneframework.rtc.events.PeerLeft.Data"]},{"name":"data class Data(val peerId: String, val metadata: Metadata)","description":"org.membraneframework.rtc.events.PeerUpdated.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/-data/index.html","searchKeys":["Data","data class Data(val peerId: String, val metadata: Metadata)","org.membraneframework.rtc.events.PeerUpdated.Data"]},{"name":"data class Data(val peerId: String, val trackId: String, val metadata: Metadata)","description":"org.membraneframework.rtc.events.TrackUpdated.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-data/index.html","searchKeys":["Data","data class Data(val peerId: String, val trackId: String, val metadata: Metadata)","org.membraneframework.rtc.events.TrackUpdated.Data"]},{"name":"data class Data(val peerId: String, val trackIdToMetadata: Map<String, Metadata>)","description":"org.membraneframework.rtc.events.TracksAdded.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/-data/index.html","searchKeys":["Data","data class Data(val peerId: String, val trackIdToMetadata: Map<String, Metadata>)","org.membraneframework.rtc.events.TracksAdded.Data"]},{"name":"data class Data(val peerId: String, val trackIds: List<String>)","description":"org.membraneframework.rtc.events.TracksRemoved.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/-data/index.html","searchKeys":["Data","data class Data(val peerId: String, val trackIds: List<String>)","org.membraneframework.rtc.events.TracksRemoved.Data"]},{"name":"data class Data(val trackId: String, val trackMetadata: Metadata)","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-data/index.html","searchKeys":["Data","data class Data(val trackId: String, val trackMetadata: Metadata)","org.membraneframework.rtc.events.UpdateTrackMetadata.Data"]},{"name":"data class Data(val type: ReceivableEventType)","description":"org.membraneframework.rtc.events.BaseCustomEvent.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/-data/index.html","searchKeys":["Data","data class Data(val type: ReceivableEventType)","org.membraneframework.rtc.events.BaseCustomEvent.Data"]},{"name":"data class Data(val type: String, val sdp: String, val midToTrackId: Map<String, String>)","description":"org.membraneframework.rtc.events.SdpAnswer.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-data/index.html","searchKeys":["Data","data class Data(val type: String, val sdp: String, val midToTrackId: Map<String, String>)","org.membraneframework.rtc.events.SdpAnswer.Data"]},{"name":"data class Dimensions(val width: Int, val height: Int)","description":"org.membraneframework.rtc.media.Dimensions","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-dimensions/index.html","searchKeys":["Dimensions","data class Dimensions(val width: Int, val height: Int)","org.membraneframework.rtc.media.Dimensions"]},{"name":"data class EncoderOptions(val encoderType: EncoderType = EncoderType.SOFTWARE, val enableIntelVp8Encoder: Boolean = true, val enableH264HighProfile: Boolean = false)","description":"org.membraneframework.rtc.EncoderOptions","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-options/index.html","searchKeys":["EncoderOptions","data class EncoderOptions(val encoderType: EncoderType = EncoderType.SOFTWARE, val enableIntelVp8Encoder: Boolean = true, val enableH264HighProfile: Boolean = false)","org.membraneframework.rtc.EncoderOptions"]},{"name":"data class Join(val type: String, val data: Join.Data) : SendableEvent","description":"org.membraneframework.rtc.events.Join","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/index.html","searchKeys":["Join","data class Join(val type: String, val data: Join.Data) : SendableEvent","org.membraneframework.rtc.events.Join"]},{"name":"data class LocalCandidate(val type: String, val data: Payload) : SendableEvent","description":"org.membraneframework.rtc.events.LocalCandidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-local-candidate/index.html","searchKeys":["LocalCandidate","data class LocalCandidate(val type: String, val data: Payload) : SendableEvent","org.membraneframework.rtc.events.LocalCandidate"]},{"name":"data class OfferData(val type: ReceivableEventType, val data: OfferData.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.OfferData","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/index.html","searchKeys":["OfferData","data class OfferData(val type: ReceivableEventType, val data: OfferData.Data) : ReceivableEvent","org.membraneframework.rtc.events.OfferData"]},{"name":"data class Peer(val id: String, val metadata: Metadata, val trackIdToMetadata: Map<String, Metadata>)","description":"org.membraneframework.rtc.models.Peer","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/index.html","searchKeys":["Peer","data class Peer(val id: String, val metadata: Metadata, val trackIdToMetadata: Map<String, Metadata>)","org.membraneframework.rtc.models.Peer"]},{"name":"data class PeerAccepted(val type: ReceivableEventType, val data: PeerAccepted.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.PeerAccepted","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/index.html","searchKeys":["PeerAccepted","data class PeerAccepted(val type: ReceivableEventType, val data: PeerAccepted.Data) : ReceivableEvent","org.membraneframework.rtc.events.PeerAccepted"]},{"name":"data class PeerDenied(val type: ReceivableEventType) : ReceivableEvent","description":"org.membraneframework.rtc.events.PeerDenied","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-denied/index.html","searchKeys":["PeerDenied","data class PeerDenied(val type: ReceivableEventType) : ReceivableEvent","org.membraneframework.rtc.events.PeerDenied"]},{"name":"data class PeerJoined(val type: ReceivableEventType, val data: PeerJoined.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.PeerJoined","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/index.html","searchKeys":["PeerJoined","data class PeerJoined(val type: ReceivableEventType, val data: PeerJoined.Data) : ReceivableEvent","org.membraneframework.rtc.events.PeerJoined"]},{"name":"data class PeerLeft(val type: ReceivableEventType, val data: PeerLeft.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.PeerLeft","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/index.html","searchKeys":["PeerLeft","data class PeerLeft(val type: ReceivableEventType, val data: PeerLeft.Data) : ReceivableEvent","org.membraneframework.rtc.events.PeerLeft"]},{"name":"data class PeerUpdated(val type: ReceivableEventType, val data: PeerUpdated.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.PeerUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/index.html","searchKeys":["PeerUpdated","data class PeerUpdated(val type: ReceivableEventType, val data: PeerUpdated.Data) : ReceivableEvent","org.membraneframework.rtc.events.PeerUpdated"]},{"name":"data class RTC(val reason: String) : MembraneRTCError","description":"org.membraneframework.rtc.MembraneRTCError.RTC","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-r-t-c/index.html","searchKeys":["RTC","data class RTC(val reason: String) : MembraneRTCError","org.membraneframework.rtc.MembraneRTCError.RTC"]},{"name":"data class RemoteCandidate(val type: ReceivableEventType, val data: RemoteCandidate.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.RemoteCandidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/index.html","searchKeys":["RemoteCandidate","data class RemoteCandidate(val type: ReceivableEventType, val data: RemoteCandidate.Data) : ReceivableEvent","org.membraneframework.rtc.events.RemoteCandidate"]},{"name":"data class RenegotiateTracks(val type: String, val data: Payload) : SendableEvent","description":"org.membraneframework.rtc.events.RenegotiateTracks","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-renegotiate-tracks/index.html","searchKeys":["RenegotiateTracks","data class RenegotiateTracks(val type: String, val data: Payload) : SendableEvent","org.membraneframework.rtc.events.RenegotiateTracks"]},{"name":"data class SdpAnswer(val type: ReceivableEventType, val data: SdpAnswer.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.SdpAnswer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/index.html","searchKeys":["SdpAnswer","data class SdpAnswer(val type: ReceivableEventType, val data: SdpAnswer.Data) : ReceivableEvent","org.membraneframework.rtc.events.SdpAnswer"]},{"name":"data class SdpOffer(val type: String, val data: Payload) : SendableEvent","description":"org.membraneframework.rtc.events.SdpOffer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-offer/index.html","searchKeys":["SdpOffer","data class SdpOffer(val type: String, val data: Payload) : SendableEvent","org.membraneframework.rtc.events.SdpOffer"]},{"name":"data class SelectEncoding(val type: String, val data: Payload) : SendableEvent","description":"org.membraneframework.rtc.events.SelectEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-select-encoding/index.html","searchKeys":["SelectEncoding","data class SelectEncoding(val type: String, val data: Payload) : SendableEvent","org.membraneframework.rtc.events.SelectEncoding"]},{"name":"data class SimulcastConfig(val enabled: Boolean = false, val activeEncodings: List<TrackEncoding> = listOf())","description":"org.membraneframework.rtc.SimulcastConfig","location":"-membrane-r-t-c/org.membraneframework.rtc/-simulcast-config/index.html","searchKeys":["SimulcastConfig","data class SimulcastConfig(val enabled: Boolean = false, val activeEncodings: List<TrackEncoding> = listOf())","org.membraneframework.rtc.SimulcastConfig"]},{"name":"data class TrackContext(val track: RemoteTrack?, val peer: Peer, val trackId: String, val metadata: Metadata)","description":"org.membraneframework.rtc.models.TrackContext","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/index.html","searchKeys":["TrackContext","data class TrackContext(val track: RemoteTrack?, val peer: Peer, val trackId: String, val metadata: Metadata)","org.membraneframework.rtc.models.TrackContext"]},{"name":"data class TrackUpdated(val type: ReceivableEventType, val data: TrackUpdated.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.TrackUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/index.html","searchKeys":["TrackUpdated","data class TrackUpdated(val type: ReceivableEventType, val data: TrackUpdated.Data) : ReceivableEvent","org.membraneframework.rtc.events.TrackUpdated"]},{"name":"data class TracksAdded(val type: ReceivableEventType, val data: TracksAdded.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.TracksAdded","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/index.html","searchKeys":["TracksAdded","data class TracksAdded(val type: ReceivableEventType, val data: TracksAdded.Data) : ReceivableEvent","org.membraneframework.rtc.events.TracksAdded"]},{"name":"data class TracksRemoved(val type: ReceivableEventType, val data: TracksRemoved.Data) : ReceivableEvent","description":"org.membraneframework.rtc.events.TracksRemoved","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/index.html","searchKeys":["TracksRemoved","data class TracksRemoved(val type: ReceivableEventType, val data: TracksRemoved.Data) : ReceivableEvent","org.membraneframework.rtc.events.TracksRemoved"]},{"name":"data class Transport(val reason: String) : MembraneRTCError","description":"org.membraneframework.rtc.MembraneRTCError.Transport","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-transport/index.html","searchKeys":["Transport","data class Transport(val reason: String) : MembraneRTCError","org.membraneframework.rtc.MembraneRTCError.Transport"]},{"name":"data class TurnServer(val username: String, val password: String, val serverAddr: String, val serverPort: UInt, val transport: String)","description":"org.membraneframework.rtc.events.OfferData.TurnServer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/index.html","searchKeys":["TurnServer","data class TurnServer(val username: String, val password: String, val serverAddr: String, val serverPort: UInt, val transport: String)","org.membraneframework.rtc.events.OfferData.TurnServer"]},{"name":"data class Unauthorized(val reason: String) : EventTransportError","description":"org.membraneframework.rtc.transport.EventTransportError.Unauthorized","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unauthorized/index.html","searchKeys":["Unauthorized","data class Unauthorized(val reason: String) : EventTransportError","org.membraneframework.rtc.transport.EventTransportError.Unauthorized"]},{"name":"data class Unexpected(val reason: String) : EventTransportError","description":"org.membraneframework.rtc.transport.EventTransportError.Unexpected","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unexpected/index.html","searchKeys":["Unexpected","data class Unexpected(val reason: String) : EventTransportError","org.membraneframework.rtc.transport.EventTransportError.Unexpected"]},{"name":"data class Unknown(val reason: String) : MembraneRTCError","description":"org.membraneframework.rtc.MembraneRTCError.Unknown","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-unknown/index.html","searchKeys":["Unknown","data class Unknown(val reason: String) : MembraneRTCError","org.membraneframework.rtc.MembraneRTCError.Unknown"]},{"name":"data class UpdatePeerMetadata(val type: String, val data: UpdatePeerMetadata.Data) : SendableEvent","description":"org.membraneframework.rtc.events.UpdatePeerMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/index.html","searchKeys":["UpdatePeerMetadata","data class UpdatePeerMetadata(val type: String, val data: UpdatePeerMetadata.Data) : SendableEvent","org.membraneframework.rtc.events.UpdatePeerMetadata"]},{"name":"data class UpdateTrackMetadata(val type: String, val data: UpdateTrackMetadata.Data) : SendableEvent","description":"org.membraneframework.rtc.events.UpdateTrackMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/index.html","searchKeys":["UpdateTrackMetadata","data class UpdateTrackMetadata(val type: String, val data: UpdateTrackMetadata.Data) : SendableEvent","org.membraneframework.rtc.events.UpdateTrackMetadata"]},{"name":"data class VideoParameters(val dimensions: Dimensions, val maxBitrate: TrackBandwidthLimit, val maxFps: Int, val simulcastConfig: SimulcastConfig = SimulcastConfig())","description":"org.membraneframework.rtc.media.VideoParameters","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/index.html","searchKeys":["VideoParameters","data class VideoParameters(val dimensions: Dimensions, val maxBitrate: TrackBandwidthLimit, val maxFps: Int, val simulcastConfig: SimulcastConfig = SimulcastConfig())","org.membraneframework.rtc.media.VideoParameters"]},{"name":"enum EncoderType : Enum<EncoderType> ","description":"org.membraneframework.rtc.EncoderType","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-type/index.html","searchKeys":["EncoderType","enum EncoderType : Enum<EncoderType> ","org.membraneframework.rtc.EncoderType"]},{"name":"enum ReceivableEventType : Enum<ReceivableEventType> ","description":"org.membraneframework.rtc.events.ReceivableEventType","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/index.html","searchKeys":["ReceivableEventType","enum ReceivableEventType : Enum<ReceivableEventType> ","org.membraneframework.rtc.events.ReceivableEventType"]},{"name":"enum TrackEncoding : Enum<TrackEncoding> ","description":"org.membraneframework.rtc.TrackEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/index.html","searchKeys":["TrackEncoding","enum TrackEncoding : Enum<TrackEncoding> ","org.membraneframework.rtc.TrackEncoding"]},{"name":"fun <Event : ReceivableEvent> CustomEvent(type: ReceivableEventType, data: Event)","description":"org.membraneframework.rtc.events.CustomEvent.CustomEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-custom-event/-custom-event.html","searchKeys":["CustomEvent","fun <Event : ReceivableEvent> CustomEvent(type: ReceivableEventType, data: Event)","org.membraneframework.rtc.events.CustomEvent.CustomEvent"]},{"name":"fun AudioTrack(audioTrack: AudioTrack)","description":"org.membraneframework.rtc.media.AudioTrack.AudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-audio-track/-audio-track.html","searchKeys":["AudioTrack","fun AudioTrack(audioTrack: AudioTrack)","org.membraneframework.rtc.media.AudioTrack.AudioTrack"]},{"name":"fun BandwidthLimit(limit: Int)","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit.BandwidthLimit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-bandwidth-limit/-bandwidth-limit.html","searchKeys":["BandwidthLimit","fun BandwidthLimit(limit: Int)","org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit.BandwidthLimit"]},{"name":"fun BaseCustomEvent(type: ReceivableEventType, data: BaseCustomEvent.Data)","description":"org.membraneframework.rtc.events.BaseCustomEvent.BaseCustomEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/-base-custom-event.html","searchKeys":["BaseCustomEvent","fun BaseCustomEvent(type: ReceivableEventType, data: BaseCustomEvent.Data)","org.membraneframework.rtc.events.BaseCustomEvent.BaseCustomEvent"]},{"name":"fun CameraCapturer(context: Context, source: VideoSource, rootEglBase: EglBase, videoParameters: VideoParameters)","description":"org.membraneframework.rtc.media.CameraCapturer.CameraCapturer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/-camera-capturer.html","searchKeys":["CameraCapturer","fun CameraCapturer(context: Context, source: VideoSource, rootEglBase: EglBase, videoParameters: VideoParameters)","org.membraneframework.rtc.media.CameraCapturer.CameraCapturer"]},{"name":"fun ConnectOptions(transport: EventTransport, config: Metadata, encoderOptions: EncoderOptions = EncoderOptions())","description":"org.membraneframework.rtc.ConnectOptions.ConnectOptions","location":"-membrane-r-t-c/org.membraneframework.rtc/-connect-options/-connect-options.html","searchKeys":["ConnectOptions","fun ConnectOptions(transport: EventTransport, config: Metadata, encoderOptions: EncoderOptions = EncoderOptions())","org.membraneframework.rtc.ConnectOptions.ConnectOptions"]},{"name":"fun ConnectionError(reason: String)","description":"org.membraneframework.rtc.transport.EventTransportError.ConnectionError.ConnectionError","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-connection-error/-connection-error.html","searchKeys":["ConnectionError","fun ConnectionError(reason: String)","org.membraneframework.rtc.transport.EventTransportError.ConnectionError.ConnectionError"]},{"name":"fun Constants()","description":"org.membraneframework.rtc.Constants.Constants","location":"-membrane-r-t-c/org.membraneframework.rtc/-constants/-constants.html","searchKeys":["Constants","fun Constants()","org.membraneframework.rtc.Constants.Constants"]},{"name":"fun Data(candidate: String, sdpMLineIndex: Int, sdpMid: String?)","description":"org.membraneframework.rtc.events.RemoteCandidate.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-data/-data.html","searchKeys":["Data","fun Data(candidate: String, sdpMLineIndex: Int, sdpMid: String?)","org.membraneframework.rtc.events.RemoteCandidate.Data.Data"]},{"name":"fun Data(id: String, peersInRoom: List<Peer>)","description":"org.membraneframework.rtc.events.PeerAccepted.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/-data/-data.html","searchKeys":["Data","fun Data(id: String, peersInRoom: List<Peer>)","org.membraneframework.rtc.events.PeerAccepted.Data.Data"]},{"name":"fun Data(integratedTurnServers: List<OfferData.TurnServer>, tracksTypes: Map<String, Int>)","description":"org.membraneframework.rtc.events.OfferData.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-data/-data.html","searchKeys":["Data","fun Data(integratedTurnServers: List<OfferData.TurnServer>, tracksTypes: Map<String, Int>)","org.membraneframework.rtc.events.OfferData.Data.Data"]},{"name":"fun Data(metadata: Metadata)","description":"org.membraneframework.rtc.events.Join.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/-data/-data.html","searchKeys":["Data","fun Data(metadata: Metadata)","org.membraneframework.rtc.events.Join.Data.Data"]},{"name":"fun Data(metadata: Metadata)","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/-data/-data.html","searchKeys":["Data","fun Data(metadata: Metadata)","org.membraneframework.rtc.events.UpdatePeerMetadata.Data.Data"]},{"name":"fun Data(peer: Peer)","description":"org.membraneframework.rtc.events.PeerJoined.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/-data/-data.html","searchKeys":["Data","fun Data(peer: Peer)","org.membraneframework.rtc.events.PeerJoined.Data.Data"]},{"name":"fun Data(peerId: String)","description":"org.membraneframework.rtc.events.PeerLeft.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/-data/-data.html","searchKeys":["Data","fun Data(peerId: String)","org.membraneframework.rtc.events.PeerLeft.Data.Data"]},{"name":"fun Data(peerId: String, metadata: Metadata)","description":"org.membraneframework.rtc.events.PeerUpdated.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/-data/-data.html","searchKeys":["Data","fun Data(peerId: String, metadata: Metadata)","org.membraneframework.rtc.events.PeerUpdated.Data.Data"]},{"name":"fun Data(peerId: String, trackId: String, metadata: Metadata)","description":"org.membraneframework.rtc.events.TrackUpdated.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-data/-data.html","searchKeys":["Data","fun Data(peerId: String, trackId: String, metadata: Metadata)","org.membraneframework.rtc.events.TrackUpdated.Data.Data"]},{"name":"fun Data(peerId: String, trackIdToMetadata: Map<String, Metadata>)","description":"org.membraneframework.rtc.events.TracksAdded.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/-data/-data.html","searchKeys":["Data","fun Data(peerId: String, trackIdToMetadata: Map<String, Metadata>)","org.membraneframework.rtc.events.TracksAdded.Data.Data"]},{"name":"fun Data(peerId: String, trackIds: List<String>)","description":"org.membraneframework.rtc.events.TracksRemoved.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/-data/-data.html","searchKeys":["Data","fun Data(peerId: String, trackIds: List<String>)","org.membraneframework.rtc.events.TracksRemoved.Data.Data"]},{"name":"fun Data(trackId: String, trackMetadata: Metadata)","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-data/-data.html","searchKeys":["Data","fun Data(trackId: String, trackMetadata: Metadata)","org.membraneframework.rtc.events.UpdateTrackMetadata.Data.Data"]},{"name":"fun Data(type: ReceivableEventType)","description":"org.membraneframework.rtc.events.BaseCustomEvent.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/-data/-data.html","searchKeys":["Data","fun Data(type: ReceivableEventType)","org.membraneframework.rtc.events.BaseCustomEvent.Data.Data"]},{"name":"fun Data(type: String, sdp: String, midToTrackId: Map<String, String>)","description":"org.membraneframework.rtc.events.SdpAnswer.Data.Data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-data/-data.html","searchKeys":["Data","fun Data(type: String, sdp: String, midToTrackId: Map<String, String>)","org.membraneframework.rtc.events.SdpAnswer.Data.Data"]},{"name":"fun Dimensions(width: Int, height: Int)","description":"org.membraneframework.rtc.media.Dimensions.Dimensions","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-dimensions/-dimensions.html","searchKeys":["Dimensions","fun Dimensions(width: Int, height: Int)","org.membraneframework.rtc.media.Dimensions.Dimensions"]},{"name":"fun EncoderOptions(encoderType: EncoderType = EncoderType.SOFTWARE, enableIntelVp8Encoder: Boolean = true, enableH264HighProfile: Boolean = false)","description":"org.membraneframework.rtc.EncoderOptions.EncoderOptions","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-options/-encoder-options.html","searchKeys":["EncoderOptions","fun EncoderOptions(encoderType: EncoderType = EncoderType.SOFTWARE, enableIntelVp8Encoder: Boolean = true, enableH264HighProfile: Boolean = false)","org.membraneframework.rtc.EncoderOptions.EncoderOptions"]},{"name":"fun Join(metadata: Metadata)","description":"org.membraneframework.rtc.events.Join.Join","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/-join.html","searchKeys":["Join","fun Join(metadata: Metadata)","org.membraneframework.rtc.events.Join.Join"]},{"name":"fun Join(type: String, data: Join.Data)","description":"org.membraneframework.rtc.events.Join.Join","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/-join.html","searchKeys":["Join","fun Join(type: String, data: Join.Data)","org.membraneframework.rtc.events.Join.Join"]},{"name":"fun LocalAudioTrack(mediaTrack: AudioTrack)","description":"org.membraneframework.rtc.media.LocalAudioTrack.LocalAudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/-local-audio-track.html","searchKeys":["LocalAudioTrack","fun LocalAudioTrack(mediaTrack: AudioTrack)","org.membraneframework.rtc.media.LocalAudioTrack.LocalAudioTrack"]},{"name":"fun LocalCandidate(candidate: String, sdpMLineIndex: Int)","description":"org.membraneframework.rtc.events.LocalCandidate.LocalCandidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-local-candidate/-local-candidate.html","searchKeys":["LocalCandidate","fun LocalCandidate(candidate: String, sdpMLineIndex: Int)","org.membraneframework.rtc.events.LocalCandidate.LocalCandidate"]},{"name":"fun LocalCandidate(type: String, data: Payload)","description":"org.membraneframework.rtc.events.LocalCandidate.LocalCandidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-local-candidate/-local-candidate.html","searchKeys":["LocalCandidate","fun LocalCandidate(type: String, data: Payload)","org.membraneframework.rtc.events.LocalCandidate.LocalCandidate"]},{"name":"fun LocalScreencastTrack(mediaTrack: VideoTrack, context: Context, eglBase: EglBase, capturer: ScreenCapturerAndroid, videoParameters: VideoParameters, callback: LocalScreencastTrack.ProjectionCallback)","description":"org.membraneframework.rtc.media.LocalScreencastTrack.LocalScreencastTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-local-screencast-track.html","searchKeys":["LocalScreencastTrack","fun LocalScreencastTrack(mediaTrack: VideoTrack, context: Context, eglBase: EglBase, capturer: ScreenCapturerAndroid, videoParameters: VideoParameters, callback: LocalScreencastTrack.ProjectionCallback)","org.membraneframework.rtc.media.LocalScreencastTrack.LocalScreencastTrack"]},{"name":"fun LocalVideoTrack(mediaTrack: VideoTrack, capturer: Capturer, eglBase: EglBase, videoParameters: VideoParameters)","description":"org.membraneframework.rtc.media.LocalVideoTrack.LocalVideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/-local-video-track.html","searchKeys":["LocalVideoTrack","fun LocalVideoTrack(mediaTrack: VideoTrack, capturer: Capturer, eglBase: EglBase, videoParameters: VideoParameters)","org.membraneframework.rtc.media.LocalVideoTrack.LocalVideoTrack"]},{"name":"fun OfferData(type: ReceivableEventType, data: OfferData.Data)","description":"org.membraneframework.rtc.events.OfferData.OfferData","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-offer-data.html","searchKeys":["OfferData","fun OfferData(type: ReceivableEventType, data: OfferData.Data)","org.membraneframework.rtc.events.OfferData.OfferData"]},{"name":"fun Peer(id: String, metadata: Metadata, trackIdToMetadata: Map<String, Metadata>)","description":"org.membraneframework.rtc.models.Peer.Peer","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/-peer.html","searchKeys":["Peer","fun Peer(id: String, metadata: Metadata, trackIdToMetadata: Map<String, Metadata>)","org.membraneframework.rtc.models.Peer.Peer"]},{"name":"fun PeerAccepted(type: ReceivableEventType, data: PeerAccepted.Data)","description":"org.membraneframework.rtc.events.PeerAccepted.PeerAccepted","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/-peer-accepted.html","searchKeys":["PeerAccepted","fun PeerAccepted(type: ReceivableEventType, data: PeerAccepted.Data)","org.membraneframework.rtc.events.PeerAccepted.PeerAccepted"]},{"name":"fun PeerConnection.enforceSendOnlyDirection()","description":"org.membraneframework.rtc.enforceSendOnlyDirection","location":"-membrane-r-t-c/org.membraneframework.rtc/enforce-send-only-direction.html","searchKeys":["enforceSendOnlyDirection","fun PeerConnection.enforceSendOnlyDirection()","org.membraneframework.rtc.enforceSendOnlyDirection"]},{"name":"fun PeerDenied(type: ReceivableEventType)","description":"org.membraneframework.rtc.events.PeerDenied.PeerDenied","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-denied/-peer-denied.html","searchKeys":["PeerDenied","fun PeerDenied(type: ReceivableEventType)","org.membraneframework.rtc.events.PeerDenied.PeerDenied"]},{"name":"fun PeerJoined(type: ReceivableEventType, data: PeerJoined.Data)","description":"org.membraneframework.rtc.events.PeerJoined.PeerJoined","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/-peer-joined.html","searchKeys":["PeerJoined","fun PeerJoined(type: ReceivableEventType, data: PeerJoined.Data)","org.membraneframework.rtc.events.PeerJoined.PeerJoined"]},{"name":"fun PeerLeft(type: ReceivableEventType, data: PeerLeft.Data)","description":"org.membraneframework.rtc.events.PeerLeft.PeerLeft","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/-peer-left.html","searchKeys":["PeerLeft","fun PeerLeft(type: ReceivableEventType, data: PeerLeft.Data)","org.membraneframework.rtc.events.PeerLeft.PeerLeft"]},{"name":"fun PeerUpdated(type: ReceivableEventType, data: PeerUpdated.Data)","description":"org.membraneframework.rtc.events.PeerUpdated.PeerUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/-peer-updated.html","searchKeys":["PeerUpdated","fun PeerUpdated(type: ReceivableEventType, data: PeerUpdated.Data)","org.membraneframework.rtc.events.PeerUpdated.PeerUpdated"]},{"name":"fun PhoenixTransport(url: String, topic: String, ioDispatcher: CoroutineDispatcher, params: SocketConnectionParams? = emptyMap())","description":"org.membraneframework.rtc.transport.PhoenixTransport.PhoenixTransport","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-phoenix-transport/-phoenix-transport.html","searchKeys":["PhoenixTransport","fun PhoenixTransport(url: String, topic: String, ioDispatcher: CoroutineDispatcher, params: SocketConnectionParams? = emptyMap())","org.membraneframework.rtc.transport.PhoenixTransport.PhoenixTransport"]},{"name":"fun ProjectionCallback()","description":"org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.ProjectionCallback","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-projection-callback/-projection-callback.html","searchKeys":["ProjectionCallback","fun ProjectionCallback()","org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.ProjectionCallback"]},{"name":"fun RTC(reason: String)","description":"org.membraneframework.rtc.MembraneRTCError.RTC.RTC","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-r-t-c/-r-t-c.html","searchKeys":["RTC","fun RTC(reason: String)","org.membraneframework.rtc.MembraneRTCError.RTC.RTC"]},{"name":"fun RemoteAudioTrack(mediaTrack: AudioTrack)","description":"org.membraneframework.rtc.media.RemoteAudioTrack.RemoteAudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-audio-track/-remote-audio-track.html","searchKeys":["RemoteAudioTrack","fun RemoteAudioTrack(mediaTrack: AudioTrack)","org.membraneframework.rtc.media.RemoteAudioTrack.RemoteAudioTrack"]},{"name":"fun RemoteCandidate(type: ReceivableEventType, data: RemoteCandidate.Data)","description":"org.membraneframework.rtc.events.RemoteCandidate.RemoteCandidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-remote-candidate.html","searchKeys":["RemoteCandidate","fun RemoteCandidate(type: ReceivableEventType, data: RemoteCandidate.Data)","org.membraneframework.rtc.events.RemoteCandidate.RemoteCandidate"]},{"name":"fun RemoteVideoTrack(mediaTrack: VideoTrack, eglBase: EglBase)","description":"org.membraneframework.rtc.media.RemoteVideoTrack.RemoteVideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-video-track/-remote-video-track.html","searchKeys":["RemoteVideoTrack","fun RemoteVideoTrack(mediaTrack: VideoTrack, eglBase: EglBase)","org.membraneframework.rtc.media.RemoteVideoTrack.RemoteVideoTrack"]},{"name":"fun RenegotiateTracks()","description":"org.membraneframework.rtc.events.RenegotiateTracks.RenegotiateTracks","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-renegotiate-tracks/-renegotiate-tracks.html","searchKeys":["RenegotiateTracks","fun RenegotiateTracks()","org.membraneframework.rtc.events.RenegotiateTracks.RenegotiateTracks"]},{"name":"fun RenegotiateTracks(type: String, data: Payload)","description":"org.membraneframework.rtc.events.RenegotiateTracks.RenegotiateTracks","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-renegotiate-tracks/-renegotiate-tracks.html","searchKeys":["RenegotiateTracks","fun RenegotiateTracks(type: String, data: Payload)","org.membraneframework.rtc.events.RenegotiateTracks.RenegotiateTracks"]},{"name":"fun SdpAnswer(type: ReceivableEventType, data: SdpAnswer.Data)","description":"org.membraneframework.rtc.events.SdpAnswer.SdpAnswer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-sdp-answer.html","searchKeys":["SdpAnswer","fun SdpAnswer(type: ReceivableEventType, data: SdpAnswer.Data)","org.membraneframework.rtc.events.SdpAnswer.SdpAnswer"]},{"name":"fun SdpOffer(sdp: String, trackIdToTrackMetadata: Map<String, Metadata>, midToTrackId: Map<String, String>)","description":"org.membraneframework.rtc.events.SdpOffer.SdpOffer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-offer/-sdp-offer.html","searchKeys":["SdpOffer","fun SdpOffer(sdp: String, trackIdToTrackMetadata: Map<String, Metadata>, midToTrackId: Map<String, String>)","org.membraneframework.rtc.events.SdpOffer.SdpOffer"]},{"name":"fun SdpOffer(type: String, data: Payload)","description":"org.membraneframework.rtc.events.SdpOffer.SdpOffer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-offer/-sdp-offer.html","searchKeys":["SdpOffer","fun SdpOffer(type: String, data: Payload)","org.membraneframework.rtc.events.SdpOffer.SdpOffer"]},{"name":"fun SelectEncoding(trackId: String, encoding: String)","description":"org.membraneframework.rtc.events.SelectEncoding.SelectEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-select-encoding/-select-encoding.html","searchKeys":["SelectEncoding","fun SelectEncoding(trackId: String, encoding: String)","org.membraneframework.rtc.events.SelectEncoding.SelectEncoding"]},{"name":"fun SelectEncoding(type: String, data: Payload)","description":"org.membraneframework.rtc.events.SelectEncoding.SelectEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-select-encoding/-select-encoding.html","searchKeys":["SelectEncoding","fun SelectEncoding(type: String, data: Payload)","org.membraneframework.rtc.events.SelectEncoding.SelectEncoding"]},{"name":"fun SimulcastBandwidthLimit(limit: Map<String, TrackBandwidthLimit.BandwidthLimit>)","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit.SimulcastBandwidthLimit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-simulcast-bandwidth-limit/-simulcast-bandwidth-limit.html","searchKeys":["SimulcastBandwidthLimit","fun SimulcastBandwidthLimit(limit: Map<String, TrackBandwidthLimit.BandwidthLimit>)","org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit.SimulcastBandwidthLimit"]},{"name":"fun SimulcastConfig(enabled: Boolean = false, activeEncodings: List<TrackEncoding> = listOf())","description":"org.membraneframework.rtc.SimulcastConfig.SimulcastConfig","location":"-membrane-r-t-c/org.membraneframework.rtc/-simulcast-config/-simulcast-config.html","searchKeys":["SimulcastConfig","fun SimulcastConfig(enabled: Boolean = false, activeEncodings: List<TrackEncoding> = listOf())","org.membraneframework.rtc.SimulcastConfig.SimulcastConfig"]},{"name":"fun TrackContext(track: RemoteTrack?, peer: Peer, trackId: String, metadata: Metadata)","description":"org.membraneframework.rtc.models.TrackContext.TrackContext","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/-track-context.html","searchKeys":["TrackContext","fun TrackContext(track: RemoteTrack?, peer: Peer, trackId: String, metadata: Metadata)","org.membraneframework.rtc.models.TrackContext.TrackContext"]},{"name":"fun TrackUpdated(type: ReceivableEventType, data: TrackUpdated.Data)","description":"org.membraneframework.rtc.events.TrackUpdated.TrackUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-track-updated.html","searchKeys":["TrackUpdated","fun TrackUpdated(type: ReceivableEventType, data: TrackUpdated.Data)","org.membraneframework.rtc.events.TrackUpdated.TrackUpdated"]},{"name":"fun TracksAdded(type: ReceivableEventType, data: TracksAdded.Data)","description":"org.membraneframework.rtc.events.TracksAdded.TracksAdded","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/-tracks-added.html","searchKeys":["TracksAdded","fun TracksAdded(type: ReceivableEventType, data: TracksAdded.Data)","org.membraneframework.rtc.events.TracksAdded.TracksAdded"]},{"name":"fun TracksRemoved(type: ReceivableEventType, data: TracksRemoved.Data)","description":"org.membraneframework.rtc.events.TracksRemoved.TracksRemoved","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/-tracks-removed.html","searchKeys":["TracksRemoved","fun TracksRemoved(type: ReceivableEventType, data: TracksRemoved.Data)","org.membraneframework.rtc.events.TracksRemoved.TracksRemoved"]},{"name":"fun Transport(reason: String)","description":"org.membraneframework.rtc.MembraneRTCError.Transport.Transport","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-transport/-transport.html","searchKeys":["Transport","fun Transport(reason: String)","org.membraneframework.rtc.MembraneRTCError.Transport.Transport"]},{"name":"fun TurnServer(username: String, password: String, serverAddr: String, serverPort: UInt, transport: String)","description":"org.membraneframework.rtc.events.OfferData.TurnServer.TurnServer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/-turn-server.html","searchKeys":["TurnServer","fun TurnServer(username: String, password: String, serverAddr: String, serverPort: UInt, transport: String)","org.membraneframework.rtc.events.OfferData.TurnServer.TurnServer"]},{"name":"fun Unauthorized(reason: String)","description":"org.membraneframework.rtc.transport.EventTransportError.Unauthorized.Unauthorized","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unauthorized/-unauthorized.html","searchKeys":["Unauthorized","fun Unauthorized(reason: String)","org.membraneframework.rtc.transport.EventTransportError.Unauthorized.Unauthorized"]},{"name":"fun Unexpected(reason: String)","description":"org.membraneframework.rtc.transport.EventTransportError.Unexpected.Unexpected","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unexpected/-unexpected.html","searchKeys":["Unexpected","fun Unexpected(reason: String)","org.membraneframework.rtc.transport.EventTransportError.Unexpected.Unexpected"]},{"name":"fun Unknown(reason: String)","description":"org.membraneframework.rtc.MembraneRTCError.Unknown.Unknown","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(reason: String)","org.membraneframework.rtc.MembraneRTCError.Unknown.Unknown"]},{"name":"fun UpdatePeerMetadata(metadata: Metadata)","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.UpdatePeerMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/-update-peer-metadata.html","searchKeys":["UpdatePeerMetadata","fun UpdatePeerMetadata(metadata: Metadata)","org.membraneframework.rtc.events.UpdatePeerMetadata.UpdatePeerMetadata"]},{"name":"fun UpdatePeerMetadata(type: String, data: UpdatePeerMetadata.Data)","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.UpdatePeerMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/-update-peer-metadata.html","searchKeys":["UpdatePeerMetadata","fun UpdatePeerMetadata(type: String, data: UpdatePeerMetadata.Data)","org.membraneframework.rtc.events.UpdatePeerMetadata.UpdatePeerMetadata"]},{"name":"fun UpdateTrackMetadata(trackId: String, trackMetadata: Metadata)","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.UpdateTrackMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-update-track-metadata.html","searchKeys":["UpdateTrackMetadata","fun UpdateTrackMetadata(trackId: String, trackMetadata: Metadata)","org.membraneframework.rtc.events.UpdateTrackMetadata.UpdateTrackMetadata"]},{"name":"fun UpdateTrackMetadata(type: String, data: UpdateTrackMetadata.Data)","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.UpdateTrackMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-update-track-metadata.html","searchKeys":["UpdateTrackMetadata","fun UpdateTrackMetadata(type: String, data: UpdateTrackMetadata.Data)","org.membraneframework.rtc.events.UpdateTrackMetadata.UpdateTrackMetadata"]},{"name":"fun VideoParameters(dimensions: Dimensions, maxBitrate: TrackBandwidthLimit, maxFps: Int, simulcastConfig: SimulcastConfig = SimulcastConfig())","description":"org.membraneframework.rtc.media.VideoParameters.VideoParameters","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-video-parameters.html","searchKeys":["VideoParameters","fun VideoParameters(dimensions: Dimensions, maxBitrate: TrackBandwidthLimit, maxFps: Int, simulcastConfig: SimulcastConfig = SimulcastConfig())","org.membraneframework.rtc.media.VideoParameters.VideoParameters"]},{"name":"fun VideoTextureViewRenderer(context: Context)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.VideoTextureViewRenderer","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/-video-texture-view-renderer.html","searchKeys":["VideoTextureViewRenderer","fun VideoTextureViewRenderer(context: Context)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.VideoTextureViewRenderer"]},{"name":"fun VideoTextureViewRenderer(context: Context, attrs: AttributeSet)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.VideoTextureViewRenderer","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/-video-texture-view-renderer.html","searchKeys":["VideoTextureViewRenderer","fun VideoTextureViewRenderer(context: Context, attrs: AttributeSet)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.VideoTextureViewRenderer"]},{"name":"fun VideoTrack(videoTrack: VideoTrack, eglContext: EglBase.Context)","description":"org.membraneframework.rtc.media.VideoTrack.VideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/-video-track.html","searchKeys":["VideoTrack","fun VideoTrack(videoTrack: VideoTrack, eglContext: EglBase.Context)","org.membraneframework.rtc.media.VideoTrack.VideoTrack"]},{"name":"fun addCallback(callback: () -> Unit)","description":"org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.addCallback","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-projection-callback/add-callback.html","searchKeys":["addCallback","fun addCallback(callback: () -> Unit)","org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.addCallback"]},{"name":"fun addFrameListener(listener: EglRenderer.FrameListener?, scale: Float)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.addFrameListener","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/add-frame-listener.html","searchKeys":["addFrameListener","fun addFrameListener(listener: EglRenderer.FrameListener?, scale: Float)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.addFrameListener"]},{"name":"fun addFrameListener(listener: EglRenderer.FrameListener?, scale: Float, drawerParam: RendererCommon.GlDrawer?)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.addFrameListener","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/add-frame-listener.html","searchKeys":["addFrameListener","fun addFrameListener(listener: EglRenderer.FrameListener?, scale: Float, drawerParam: RendererCommon.GlDrawer?)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.addFrameListener"]},{"name":"fun addRenderer(renderer: VideoSink)","description":"org.membraneframework.rtc.media.VideoTrack.addRenderer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/add-renderer.html","searchKeys":["addRenderer","fun addRenderer(renderer: VideoSink)","org.membraneframework.rtc.media.VideoTrack.addRenderer"]},{"name":"fun clearImage()","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.clearImage","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/clear-image.html","searchKeys":["clearImage","fun clearImage()","org.membraneframework.rtc.ui.VideoTextureViewRenderer.clearImage"]},{"name":"fun connect(appContext: Context, options: ConnectOptions, listener: MembraneRTCListener): MembraneRTC","description":"org.membraneframework.rtc.MembraneRTC.Companion.connect","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/-companion/connect.html","searchKeys":["connect","fun connect(appContext: Context, options: ConnectOptions, listener: MembraneRTCListener): MembraneRTC","org.membraneframework.rtc.MembraneRTC.Companion.connect"]},{"name":"fun create(context: Context, factory: PeerConnectionFactory): LocalAudioTrack","description":"org.membraneframework.rtc.media.LocalAudioTrack.Companion.create","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/-companion/create.html","searchKeys":["create","fun create(context: Context, factory: PeerConnectionFactory): LocalAudioTrack","org.membraneframework.rtc.media.LocalAudioTrack.Companion.create"]},{"name":"fun create(context: Context, factory: PeerConnectionFactory, eglBase: EglBase, mediaProjectionPermission: Intent, videoParameters: VideoParameters, onStopped: (track: LocalScreencastTrack) -> Unit): LocalScreencastTrack","description":"org.membraneframework.rtc.media.LocalScreencastTrack.Companion.create","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-companion/create.html","searchKeys":["create","fun create(context: Context, factory: PeerConnectionFactory, eglBase: EglBase, mediaProjectionPermission: Intent, videoParameters: VideoParameters, onStopped: (track: LocalScreencastTrack) -> Unit): LocalScreencastTrack","org.membraneframework.rtc.media.LocalScreencastTrack.Companion.create"]},{"name":"fun create(context: Context, factory: PeerConnectionFactory, eglBase: EglBase, videoParameters: VideoParameters): LocalVideoTrack","description":"org.membraneframework.rtc.media.LocalVideoTrack.Companion.create","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/-companion/create.html","searchKeys":["create","fun create(context: Context, factory: PeerConnectionFactory, eglBase: EglBase, videoParameters: VideoParameters): LocalVideoTrack","org.membraneframework.rtc.media.LocalVideoTrack.Companion.create"]},{"name":"fun createAudioTrack(metadata: Metadata): LocalAudioTrack","description":"org.membraneframework.rtc.MembraneRTC.createAudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/create-audio-track.html","searchKeys":["createAudioTrack","fun createAudioTrack(metadata: Metadata): LocalAudioTrack","org.membraneframework.rtc.MembraneRTC.createAudioTrack"]},{"name":"fun createScreencastTrack(mediaProjectionPermission: Intent, videoParameters: VideoParameters, metadata: Metadata, onEnd: () -> Unit): LocalScreencastTrack?","description":"org.membraneframework.rtc.MembraneRTC.createScreencastTrack","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/create-screencast-track.html","searchKeys":["createScreencastTrack","fun createScreencastTrack(mediaProjectionPermission: Intent, videoParameters: VideoParameters, metadata: Metadata, onEnd: () -> Unit): LocalScreencastTrack?","org.membraneframework.rtc.MembraneRTC.createScreencastTrack"]},{"name":"fun createVideoTrack(videoParameters: VideoParameters, metadata: Metadata): LocalVideoTrack","description":"org.membraneframework.rtc.MembraneRTC.createVideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/create-video-track.html","searchKeys":["createVideoTrack","fun createVideoTrack(videoParameters: VideoParameters, metadata: Metadata): LocalVideoTrack","org.membraneframework.rtc.MembraneRTC.createVideoTrack"]},{"name":"fun decode(payload: Payload): ReceivableEvent?","description":"org.membraneframework.rtc.events.ReceivableEvent.Companion.decode","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event/-companion/decode.html","searchKeys":["decode","fun decode(payload: Payload): ReceivableEvent?","org.membraneframework.rtc.events.ReceivableEvent.Companion.decode"]},{"name":"fun disableFpsReduction()","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.disableFpsReduction","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/disable-fps-reduction.html","searchKeys":["disableFpsReduction","fun disableFpsReduction()","org.membraneframework.rtc.ui.VideoTextureViewRenderer.disableFpsReduction"]},{"name":"fun disableTrackEncoding(trackId: String, encoding: TrackEncoding)","description":"org.membraneframework.rtc.MembraneRTC.disableTrackEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/disable-track-encoding.html","searchKeys":["disableTrackEncoding","fun disableTrackEncoding(trackId: String, encoding: TrackEncoding)","org.membraneframework.rtc.MembraneRTC.disableTrackEncoding"]},{"name":"fun disconnect()","description":"org.membraneframework.rtc.MembraneRTC.disconnect","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/disconnect.html","searchKeys":["disconnect","fun disconnect()","org.membraneframework.rtc.MembraneRTC.disconnect"]},{"name":"fun enableTrackEncoding(trackId: String, encoding: TrackEncoding)","description":"org.membraneframework.rtc.MembraneRTC.enableTrackEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/enable-track-encoding.html","searchKeys":["enableTrackEncoding","fun enableTrackEncoding(trackId: String, encoding: TrackEncoding)","org.membraneframework.rtc.MembraneRTC.enableTrackEncoding"]},{"name":"fun flip(): Dimensions","description":"org.membraneframework.rtc.media.Dimensions.flip","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-dimensions/flip.html","searchKeys":["flip","fun flip(): Dimensions","org.membraneframework.rtc.media.Dimensions.flip"]},{"name":"fun flipCamera()","description":"org.membraneframework.rtc.media.CameraCapturer.flipCamera","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/flip-camera.html","searchKeys":["flipCamera","fun flipCamera()","org.membraneframework.rtc.media.CameraCapturer.flipCamera"]},{"name":"fun flipCamera()","description":"org.membraneframework.rtc.media.LocalVideoTrack.flipCamera","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/flip-camera.html","searchKeys":["flipCamera","fun flipCamera()","org.membraneframework.rtc.media.LocalVideoTrack.flipCamera"]},{"name":"fun init(sharedContext: EglBase.Context?, rendererEvents: RendererCommon.RendererEvents?, configAttributes: IntArray? = EglBase.CONFIG_PLAIN, drawer: RendererCommon.GlDrawer? = GlRectDrawer())","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.init","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/init.html","searchKeys":["init","fun init(sharedContext: EglBase.Context?, rendererEvents: RendererCommon.RendererEvents?, configAttributes: IntArray? = EglBase.CONFIG_PLAIN, drawer: RendererCommon.GlDrawer? = GlRectDrawer())","org.membraneframework.rtc.ui.VideoTextureViewRenderer.init"]},{"name":"fun join()","description":"org.membraneframework.rtc.MembraneRTC.join","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/join.html","searchKeys":["join","fun join()","org.membraneframework.rtc.MembraneRTC.join"]},{"name":"fun pauseVideo()","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.pauseVideo","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/pause-video.html","searchKeys":["pauseVideo","fun pauseVideo()","org.membraneframework.rtc.ui.VideoTextureViewRenderer.pauseVideo"]},{"name":"fun release()","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.release","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/release.html","searchKeys":["release","fun release()","org.membraneframework.rtc.ui.VideoTextureViewRenderer.release"]},{"name":"fun removeFrameListener(listener: EglRenderer.FrameListener?)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.removeFrameListener","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/remove-frame-listener.html","searchKeys":["removeFrameListener","fun removeFrameListener(listener: EglRenderer.FrameListener?)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.removeFrameListener"]},{"name":"fun removeRenderer(renderer: VideoSink)","description":"org.membraneframework.rtc.media.VideoTrack.removeRenderer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/remove-renderer.html","searchKeys":["removeRenderer","fun removeRenderer(renderer: VideoSink)","org.membraneframework.rtc.media.VideoTrack.removeRenderer"]},{"name":"fun removeTrack(trackId: String): Boolean","description":"org.membraneframework.rtc.MembraneRTC.removeTrack","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/remove-track.html","searchKeys":["removeTrack","fun removeTrack(trackId: String): Boolean","org.membraneframework.rtc.MembraneRTC.removeTrack"]},{"name":"fun setEnableHardwareScaler(enabled: Boolean)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.setEnableHardwareScaler","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/set-enable-hardware-scaler.html","searchKeys":["setEnableHardwareScaler","fun setEnableHardwareScaler(enabled: Boolean)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.setEnableHardwareScaler"]},{"name":"fun setEncodingBandwidth(trackId: String, encoding: String, bandwidthLimit: TrackBandwidthLimit.BandwidthLimit)","description":"org.membraneframework.rtc.MembraneRTC.setEncodingBandwidth","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/set-encoding-bandwidth.html","searchKeys":["setEncodingBandwidth","fun setEncodingBandwidth(trackId: String, encoding: String, bandwidthLimit: TrackBandwidthLimit.BandwidthLimit)","org.membraneframework.rtc.MembraneRTC.setEncodingBandwidth"]},{"name":"fun setFpsReduction(fps: Float)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.setFpsReduction","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/set-fps-reduction.html","searchKeys":["setFpsReduction","fun setFpsReduction(fps: Float)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.setFpsReduction"]},{"name":"fun setMirror(mirror: Boolean)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.setMirror","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/set-mirror.html","searchKeys":["setMirror","fun setMirror(mirror: Boolean)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.setMirror"]},{"name":"fun setScalingType(scalingType: RendererCommon.ScalingType?)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.setScalingType","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/set-scaling-type.html","searchKeys":["setScalingType","fun setScalingType(scalingType: RendererCommon.ScalingType?)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.setScalingType"]},{"name":"fun setScalingType(scalingTypeMatchOrientation: RendererCommon.ScalingType?, scalingTypeMismatchOrientation: RendererCommon.ScalingType?)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.setScalingType","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/set-scaling-type.html","searchKeys":["setScalingType","fun setScalingType(scalingTypeMatchOrientation: RendererCommon.ScalingType?, scalingTypeMismatchOrientation: RendererCommon.ScalingType?)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.setScalingType"]},{"name":"fun setTargetTrackEncoding(trackId: String, encoding: TrackEncoding)","description":"org.membraneframework.rtc.MembraneRTC.setTargetTrackEncoding","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/set-target-track-encoding.html","searchKeys":["setTargetTrackEncoding","fun setTargetTrackEncoding(trackId: String, encoding: TrackEncoding)","org.membraneframework.rtc.MembraneRTC.setTargetTrackEncoding"]},{"name":"fun setTrackBandwidth(trackId: String, bandwidthLimit: TrackBandwidthLimit.BandwidthLimit)","description":"org.membraneframework.rtc.MembraneRTC.setTrackBandwidth","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/set-track-bandwidth.html","searchKeys":["setTrackBandwidth","fun setTrackBandwidth(trackId: String, bandwidthLimit: TrackBandwidthLimit.BandwidthLimit)","org.membraneframework.rtc.MembraneRTC.setTrackBandwidth"]},{"name":"fun simulcastEncodings(): List<RtpParameters.Encoding>","description":"org.membraneframework.rtc.Constants.Companion.simulcastEncodings","location":"-membrane-r-t-c/org.membraneframework.rtc/-constants/-companion/simulcast-encodings.html","searchKeys":["simulcastEncodings","fun simulcastEncodings(): List<RtpParameters.Encoding>","org.membraneframework.rtc.Constants.Companion.simulcastEncodings"]},{"name":"fun updatePeerMetadata(peerMetadata: Metadata)","description":"org.membraneframework.rtc.MembraneRTC.updatePeerMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/update-peer-metadata.html","searchKeys":["updatePeerMetadata","fun updatePeerMetadata(peerMetadata: Metadata)","org.membraneframework.rtc.MembraneRTC.updatePeerMetadata"]},{"name":"fun updateTrackMetadata(trackId: String, trackMetadata: Metadata)","description":"org.membraneframework.rtc.MembraneRTC.updateTrackMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/update-track-metadata.html","searchKeys":["updateTrackMetadata","fun updateTrackMetadata(trackId: String, trackMetadata: Metadata)","org.membraneframework.rtc.MembraneRTC.updateTrackMetadata"]},{"name":"fun valueOf(value: String): EncoderType","description":"org.membraneframework.rtc.EncoderType.valueOf","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EncoderType","org.membraneframework.rtc.EncoderType.valueOf"]},{"name":"fun valueOf(value: String): ReceivableEventType","description":"org.membraneframework.rtc.events.ReceivableEventType.valueOf","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ReceivableEventType","org.membraneframework.rtc.events.ReceivableEventType.valueOf"]},{"name":"fun valueOf(value: String): TrackEncoding","description":"org.membraneframework.rtc.TrackEncoding.valueOf","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackEncoding","org.membraneframework.rtc.TrackEncoding.valueOf"]},{"name":"fun values(): Array<EncoderType>","description":"org.membraneframework.rtc.EncoderType.values","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-type/values.html","searchKeys":["values","fun values(): Array<EncoderType>","org.membraneframework.rtc.EncoderType.values"]},{"name":"fun values(): Array<ReceivableEventType>","description":"org.membraneframework.rtc.events.ReceivableEventType.values","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event-type/values.html","searchKeys":["values","fun values(): Array<ReceivableEventType>","org.membraneframework.rtc.events.ReceivableEventType.values"]},{"name":"fun values(): Array<TrackEncoding>","description":"org.membraneframework.rtc.TrackEncoding.values","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/values.html","searchKeys":["values","fun values(): Array<TrackEncoding>","org.membraneframework.rtc.TrackEncoding.values"]},{"name":"fun withTrack(trackId: String, metadata: Metadata): Peer","description":"org.membraneframework.rtc.models.Peer.withTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/with-track.html","searchKeys":["withTrack","fun withTrack(trackId: String, metadata: Metadata): Peer","org.membraneframework.rtc.models.Peer.withTrack"]},{"name":"fun withoutTrack(trackId: String): Peer","description":"org.membraneframework.rtc.models.Peer.withoutTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/without-track.html","searchKeys":["withoutTrack","fun withoutTrack(trackId: String): Peer","org.membraneframework.rtc.models.Peer.withoutTrack"]},{"name":"interface Capturer","description":"org.membraneframework.rtc.media.Capturer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-capturer/index.html","searchKeys":["Capturer","interface Capturer","org.membraneframework.rtc.media.Capturer"]},{"name":"interface EventTransport","description":"org.membraneframework.rtc.transport.EventTransport","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport/index.html","searchKeys":["EventTransport","interface EventTransport","org.membraneframework.rtc.transport.EventTransport"]},{"name":"interface EventTransportListener","description":"org.membraneframework.rtc.transport.EventTransportListener","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-listener/index.html","searchKeys":["EventTransportListener","interface EventTransportListener","org.membraneframework.rtc.transport.EventTransportListener"]},{"name":"interface LocalTrack : MediaTrackProvider","description":"org.membraneframework.rtc.media.LocalTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-track/index.html","searchKeys":["LocalTrack","interface LocalTrack : MediaTrackProvider","org.membraneframework.rtc.media.LocalTrack"]},{"name":"interface MediaTrackProvider","description":"org.membraneframework.rtc.media.MediaTrackProvider","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-media-track-provider/index.html","searchKeys":["MediaTrackProvider","interface MediaTrackProvider","org.membraneframework.rtc.media.MediaTrackProvider"]},{"name":"interface MembraneRTCListener","description":"org.membraneframework.rtc.MembraneRTCListener","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-listener/index.html","searchKeys":["MembraneRTCListener","interface MembraneRTCListener","org.membraneframework.rtc.MembraneRTCListener"]},{"name":"interface RemoteTrack","description":"org.membraneframework.rtc.media.RemoteTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-track/index.html","searchKeys":["RemoteTrack","interface RemoteTrack","org.membraneframework.rtc.media.RemoteTrack"]},{"name":"object Companion","description":"org.membraneframework.rtc.Constants.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc/-constants/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.Constants.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.MembraneRTC.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.MembraneRTC.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.events.ReceivableEvent.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.events.ReceivableEvent.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.media.LocalAudioTrack.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.media.LocalAudioTrack.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.media.LocalScreencastTrack.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.media.LocalScreencastTrack.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.media.LocalVideoTrack.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.media.LocalVideoTrack.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.media.VideoParameters.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.media.VideoParameters.Companion"]},{"name":"object Companion","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.Companion","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/-companion/index.html","searchKeys":["Companion","object Companion","org.membraneframework.rtc.ui.VideoTextureViewRenderer.Companion"]},{"name":"open class AudioTrack(audioTrack: AudioTrack) : MediaTrackProvider","description":"org.membraneframework.rtc.media.AudioTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-audio-track/index.html","searchKeys":["AudioTrack","open class AudioTrack(audioTrack: AudioTrack) : MediaTrackProvider","org.membraneframework.rtc.media.AudioTrack"]},{"name":"open class VideoTrack(videoTrack: VideoTrack, val eglContext: EglBase.Context) : MediaTrackProvider","description":"org.membraneframework.rtc.media.VideoTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/index.html","searchKeys":["VideoTrack","open class VideoTrack(videoTrack: VideoTrack, val eglContext: EglBase.Context) : MediaTrackProvider","org.membraneframework.rtc.media.VideoTrack"]},{"name":"open override fun capturer(): VideoCapturer","description":"org.membraneframework.rtc.media.CameraCapturer.capturer","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/capturer.html","searchKeys":["capturer","open override fun capturer(): VideoCapturer","org.membraneframework.rtc.media.CameraCapturer.capturer"]},{"name":"open override fun enabled(): Boolean","description":"org.membraneframework.rtc.media.LocalAudioTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/enabled.html","searchKeys":["enabled","open override fun enabled(): Boolean","org.membraneframework.rtc.media.LocalAudioTrack.enabled"]},{"name":"open override fun enabled(): Boolean","description":"org.membraneframework.rtc.media.LocalScreencastTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/enabled.html","searchKeys":["enabled","open override fun enabled(): Boolean","org.membraneframework.rtc.media.LocalScreencastTrack.enabled"]},{"name":"open override fun enabled(): Boolean","description":"org.membraneframework.rtc.media.LocalVideoTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/enabled.html","searchKeys":["enabled","open override fun enabled(): Boolean","org.membraneframework.rtc.media.LocalVideoTrack.enabled"]},{"name":"open override fun enabled(): Boolean","description":"org.membraneframework.rtc.media.RemoteAudioTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-audio-track/enabled.html","searchKeys":["enabled","open override fun enabled(): Boolean","org.membraneframework.rtc.media.RemoteAudioTrack.enabled"]},{"name":"open override fun enabled(): Boolean","description":"org.membraneframework.rtc.media.RemoteVideoTrack.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-video-track/enabled.html","searchKeys":["enabled","open override fun enabled(): Boolean","org.membraneframework.rtc.media.RemoteVideoTrack.enabled"]},{"name":"open override fun id(): String","description":"org.membraneframework.rtc.media.AudioTrack.id","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-audio-track/id.html","searchKeys":["id","open override fun id(): String","org.membraneframework.rtc.media.AudioTrack.id"]},{"name":"open override fun id(): String","description":"org.membraneframework.rtc.media.VideoTrack.id","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/id.html","searchKeys":["id","open override fun id(): String","org.membraneframework.rtc.media.VideoTrack.id"]},{"name":"open override fun onCameraSwitchDone(isFrontCamera: Boolean)","description":"org.membraneframework.rtc.media.CameraCapturer.onCameraSwitchDone","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/on-camera-switch-done.html","searchKeys":["onCameraSwitchDone","open override fun onCameraSwitchDone(isFrontCamera: Boolean)","org.membraneframework.rtc.media.CameraCapturer.onCameraSwitchDone"]},{"name":"open override fun onCameraSwitchError(errorDescription: String?)","description":"org.membraneframework.rtc.media.CameraCapturer.onCameraSwitchError","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/on-camera-switch-error.html","searchKeys":["onCameraSwitchError","open override fun onCameraSwitchError(errorDescription: String?)","org.membraneframework.rtc.media.CameraCapturer.onCameraSwitchError"]},{"name":"open override fun onFirstFrameRendered()","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFirstFrameRendered","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-first-frame-rendered.html","searchKeys":["onFirstFrameRendered","open override fun onFirstFrameRendered()","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFirstFrameRendered"]},{"name":"open override fun onFrame(frame: VideoFrame)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFrame","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-frame.html","searchKeys":["onFrame","open override fun onFrame(frame: VideoFrame)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFrame"]},{"name":"open override fun onFrameResolutionChanged(videoWidth: Int, videoHeight: Int, rotation: Int)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFrameResolutionChanged","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-frame-resolution-changed.html","searchKeys":["onFrameResolutionChanged","open override fun onFrameResolutionChanged(videoWidth: Int, videoHeight: Int, rotation: Int)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onFrameResolutionChanged"]},{"name":"open override fun onStop()","description":"org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.onStop","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-projection-callback/on-stop.html","searchKeys":["onStop","open override fun onStop()","org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.onStop"]},{"name":"open override fun onSurfaceTextureAvailable(surface: SurfaceTexture, i: Int, i1: Int)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureAvailable","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-surface-texture-available.html","searchKeys":["onSurfaceTextureAvailable","open override fun onSurfaceTextureAvailable(surface: SurfaceTexture, i: Int, i1: Int)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureAvailable"]},{"name":"open override fun onSurfaceTextureDestroyed(surface: SurfaceTexture): Boolean","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureDestroyed","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-surface-texture-destroyed.html","searchKeys":["onSurfaceTextureDestroyed","open override fun onSurfaceTextureDestroyed(surface: SurfaceTexture): Boolean","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureDestroyed"]},{"name":"open override fun onSurfaceTextureSizeChanged(surface: SurfaceTexture, width: Int, height: Int)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureSizeChanged","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-surface-texture-size-changed.html","searchKeys":["onSurfaceTextureSizeChanged","open override fun onSurfaceTextureSizeChanged(surface: SurfaceTexture, width: Int, height: Int)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureSizeChanged"]},{"name":"open override fun onSurfaceTextureUpdated(surface: SurfaceTexture)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureUpdated","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/on-surface-texture-updated.html","searchKeys":["onSurfaceTextureUpdated","open override fun onSurfaceTextureUpdated(surface: SurfaceTexture)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.onSurfaceTextureUpdated"]},{"name":"open override fun rtcTrack(): MediaStreamTrack","description":"org.membraneframework.rtc.media.AudioTrack.rtcTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-audio-track/rtc-track.html","searchKeys":["rtcTrack","open override fun rtcTrack(): MediaStreamTrack","org.membraneframework.rtc.media.AudioTrack.rtcTrack"]},{"name":"open override fun rtcTrack(): MediaStreamTrack","description":"org.membraneframework.rtc.media.VideoTrack.rtcTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/rtc-track.html","searchKeys":["rtcTrack","open override fun rtcTrack(): MediaStreamTrack","org.membraneframework.rtc.media.VideoTrack.rtcTrack"]},{"name":"open override fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.LocalAudioTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/set-enabled.html","searchKeys":["setEnabled","open override fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.LocalAudioTrack.setEnabled"]},{"name":"open override fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.LocalScreencastTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/set-enabled.html","searchKeys":["setEnabled","open override fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.LocalScreencastTrack.setEnabled"]},{"name":"open override fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.LocalVideoTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/set-enabled.html","searchKeys":["setEnabled","open override fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.LocalVideoTrack.setEnabled"]},{"name":"open override fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.RemoteAudioTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-audio-track/set-enabled.html","searchKeys":["setEnabled","open override fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.RemoteAudioTrack.setEnabled"]},{"name":"open override fun setEnabled(enabled: Boolean)","description":"org.membraneframework.rtc.media.RemoteVideoTrack.setEnabled","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-remote-video-track/set-enabled.html","searchKeys":["setEnabled","open override fun setEnabled(enabled: Boolean)","org.membraneframework.rtc.media.RemoteVideoTrack.setEnabled"]},{"name":"open override fun start()","description":"org.membraneframework.rtc.media.LocalAudioTrack.start","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/start.html","searchKeys":["start","open override fun start()","org.membraneframework.rtc.media.LocalAudioTrack.start"]},{"name":"open override fun start()","description":"org.membraneframework.rtc.media.LocalScreencastTrack.start","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/start.html","searchKeys":["start","open override fun start()","org.membraneframework.rtc.media.LocalScreencastTrack.start"]},{"name":"open override fun start()","description":"org.membraneframework.rtc.media.LocalVideoTrack.start","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/start.html","searchKeys":["start","open override fun start()","org.membraneframework.rtc.media.LocalVideoTrack.start"]},{"name":"open override fun startCapture()","description":"org.membraneframework.rtc.media.CameraCapturer.startCapture","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/start-capture.html","searchKeys":["startCapture","open override fun startCapture()","org.membraneframework.rtc.media.CameraCapturer.startCapture"]},{"name":"open override fun stop()","description":"org.membraneframework.rtc.media.LocalAudioTrack.stop","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/stop.html","searchKeys":["stop","open override fun stop()","org.membraneframework.rtc.media.LocalAudioTrack.stop"]},{"name":"open override fun stop()","description":"org.membraneframework.rtc.media.LocalScreencastTrack.stop","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/stop.html","searchKeys":["stop","open override fun stop()","org.membraneframework.rtc.media.LocalScreencastTrack.stop"]},{"name":"open override fun stop()","description":"org.membraneframework.rtc.media.LocalVideoTrack.stop","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/stop.html","searchKeys":["stop","open override fun stop()","org.membraneframework.rtc.media.LocalVideoTrack.stop"]},{"name":"open override fun stopCapture()","description":"org.membraneframework.rtc.media.CameraCapturer.stopCapture","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-camera-capturer/stop-capture.html","searchKeys":["stopCapture","open override fun stopCapture()","org.membraneframework.rtc.media.CameraCapturer.stopCapture"]},{"name":"open override fun surfaceChanged(holder: SurfaceHolder, format: Int, width: Int, height: Int)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceChanged","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/surface-changed.html","searchKeys":["surfaceChanged","open override fun surfaceChanged(holder: SurfaceHolder, format: Int, width: Int, height: Int)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceChanged"]},{"name":"open override fun surfaceCreated(holder: SurfaceHolder)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceCreated","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/surface-created.html","searchKeys":["surfaceCreated","open override fun surfaceCreated(holder: SurfaceHolder)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceCreated"]},{"name":"open override fun surfaceDestroyed(holder: SurfaceHolder)","description":"org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceDestroyed","location":"-membrane-r-t-c/org.membraneframework.rtc.ui/-video-texture-view-renderer/surface-destroyed.html","searchKeys":["surfaceDestroyed","open override fun surfaceDestroyed(holder: SurfaceHolder)","org.membraneframework.rtc.ui.VideoTextureViewRenderer.surfaceDestroyed"]},{"name":"open override fun toString(): String","description":"org.membraneframework.rtc.MembraneRTCError.toString","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/to-string.html","searchKeys":["toString","open override fun toString(): String","org.membraneframework.rtc.MembraneRTCError.toString"]},{"name":"open override fun toString(): String","description":"org.membraneframework.rtc.transport.EventTransportError.toString","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/to-string.html","searchKeys":["toString","open override fun toString(): String","org.membraneframework.rtc.transport.EventTransportError.toString"]},{"name":"open suspend override fun connect(listener: EventTransportListener)","description":"org.membraneframework.rtc.transport.PhoenixTransport.connect","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-phoenix-transport/connect.html","searchKeys":["connect","open suspend override fun connect(listener: EventTransportListener)","org.membraneframework.rtc.transport.PhoenixTransport.connect"]},{"name":"open suspend override fun disconnect()","description":"org.membraneframework.rtc.transport.PhoenixTransport.disconnect","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-phoenix-transport/disconnect.html","searchKeys":["disconnect","open suspend override fun disconnect()","org.membraneframework.rtc.transport.PhoenixTransport.disconnect"]},{"name":"open suspend override fun send(event: SendableEvent)","description":"org.membraneframework.rtc.transport.PhoenixTransport.send","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-phoenix-transport/send.html","searchKeys":["send","open suspend override fun send(event: SendableEvent)","org.membraneframework.rtc.transport.PhoenixTransport.send"]},{"name":"sealed class EventTransportError : Exception","description":"org.membraneframework.rtc.transport.EventTransportError","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/index.html","searchKeys":["EventTransportError","sealed class EventTransportError : Exception","org.membraneframework.rtc.transport.EventTransportError"]},{"name":"sealed class MembraneRTCError : Exception","description":"org.membraneframework.rtc.MembraneRTCError","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/index.html","searchKeys":["MembraneRTCError","sealed class MembraneRTCError : Exception","org.membraneframework.rtc.MembraneRTCError"]},{"name":"sealed class ReceivableEvent","description":"org.membraneframework.rtc.events.ReceivableEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-receivable-event/index.html","searchKeys":["ReceivableEvent","sealed class ReceivableEvent","org.membraneframework.rtc.events.ReceivableEvent"]},{"name":"sealed class SendableEvent","description":"org.membraneframework.rtc.events.SendableEvent","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sendable-event/index.html","searchKeys":["SendableEvent","sealed class SendableEvent","org.membraneframework.rtc.events.SendableEvent"]},{"name":"sealed class TrackBandwidthLimit","description":"org.membraneframework.rtc.media.TrackBandwidthLimit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/index.html","searchKeys":["TrackBandwidthLimit","sealed class TrackBandwidthLimit","org.membraneframework.rtc.media.TrackBandwidthLimit"]},{"name":"suspend fun startForegroundService(notificationId: Int?, notification: Notification?)","description":"org.membraneframework.rtc.media.LocalScreencastTrack.startForegroundService","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/start-foreground-service.html","searchKeys":["startForegroundService","suspend fun startForegroundService(notificationId: Int?, notification: Notification?)","org.membraneframework.rtc.media.LocalScreencastTrack.startForegroundService"]},{"name":"val activeEncodings: List<TrackEncoding>","description":"org.membraneframework.rtc.SimulcastConfig.activeEncodings","location":"-membrane-r-t-c/org.membraneframework.rtc/-simulcast-config/active-encodings.html","searchKeys":["activeEncodings","val activeEncodings: List<TrackEncoding>","org.membraneframework.rtc.SimulcastConfig.activeEncodings"]},{"name":"val candidate: String","description":"org.membraneframework.rtc.events.RemoteCandidate.Data.candidate","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-data/candidate.html","searchKeys":["candidate","val candidate: String","org.membraneframework.rtc.events.RemoteCandidate.Data.candidate"]},{"name":"val config: Metadata","description":"org.membraneframework.rtc.ConnectOptions.config","location":"-membrane-r-t-c/org.membraneframework.rtc/-connect-options/config.html","searchKeys":["config","val config: Metadata","org.membraneframework.rtc.ConnectOptions.config"]},{"name":"val data: BaseCustomEvent.Data","description":"org.membraneframework.rtc.events.BaseCustomEvent.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/data.html","searchKeys":["data","val data: BaseCustomEvent.Data","org.membraneframework.rtc.events.BaseCustomEvent.data"]},{"name":"val data: Event","description":"org.membraneframework.rtc.events.CustomEvent.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-custom-event/data.html","searchKeys":["data","val data: Event","org.membraneframework.rtc.events.CustomEvent.data"]},{"name":"val data: Join.Data","description":"org.membraneframework.rtc.events.Join.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/data.html","searchKeys":["data","val data: Join.Data","org.membraneframework.rtc.events.Join.data"]},{"name":"val data: OfferData.Data","description":"org.membraneframework.rtc.events.OfferData.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/data.html","searchKeys":["data","val data: OfferData.Data","org.membraneframework.rtc.events.OfferData.data"]},{"name":"val data: Payload","description":"org.membraneframework.rtc.events.LocalCandidate.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-local-candidate/data.html","searchKeys":["data","val data: Payload","org.membraneframework.rtc.events.LocalCandidate.data"]},{"name":"val data: Payload","description":"org.membraneframework.rtc.events.RenegotiateTracks.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-renegotiate-tracks/data.html","searchKeys":["data","val data: Payload","org.membraneframework.rtc.events.RenegotiateTracks.data"]},{"name":"val data: Payload","description":"org.membraneframework.rtc.events.SdpOffer.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-offer/data.html","searchKeys":["data","val data: Payload","org.membraneframework.rtc.events.SdpOffer.data"]},{"name":"val data: Payload","description":"org.membraneframework.rtc.events.SelectEncoding.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-select-encoding/data.html","searchKeys":["data","val data: Payload","org.membraneframework.rtc.events.SelectEncoding.data"]},{"name":"val data: PeerAccepted.Data","description":"org.membraneframework.rtc.events.PeerAccepted.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/data.html","searchKeys":["data","val data: PeerAccepted.Data","org.membraneframework.rtc.events.PeerAccepted.data"]},{"name":"val data: PeerJoined.Data","description":"org.membraneframework.rtc.events.PeerJoined.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/data.html","searchKeys":["data","val data: PeerJoined.Data","org.membraneframework.rtc.events.PeerJoined.data"]},{"name":"val data: PeerLeft.Data","description":"org.membraneframework.rtc.events.PeerLeft.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/data.html","searchKeys":["data","val data: PeerLeft.Data","org.membraneframework.rtc.events.PeerLeft.data"]},{"name":"val data: PeerUpdated.Data","description":"org.membraneframework.rtc.events.PeerUpdated.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/data.html","searchKeys":["data","val data: PeerUpdated.Data","org.membraneframework.rtc.events.PeerUpdated.data"]},{"name":"val data: RemoteCandidate.Data","description":"org.membraneframework.rtc.events.RemoteCandidate.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/data.html","searchKeys":["data","val data: RemoteCandidate.Data","org.membraneframework.rtc.events.RemoteCandidate.data"]},{"name":"val data: SdpAnswer.Data","description":"org.membraneframework.rtc.events.SdpAnswer.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/data.html","searchKeys":["data","val data: SdpAnswer.Data","org.membraneframework.rtc.events.SdpAnswer.data"]},{"name":"val data: TrackUpdated.Data","description":"org.membraneframework.rtc.events.TrackUpdated.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/data.html","searchKeys":["data","val data: TrackUpdated.Data","org.membraneframework.rtc.events.TrackUpdated.data"]},{"name":"val data: TracksAdded.Data","description":"org.membraneframework.rtc.events.TracksAdded.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/data.html","searchKeys":["data","val data: TracksAdded.Data","org.membraneframework.rtc.events.TracksAdded.data"]},{"name":"val data: TracksRemoved.Data","description":"org.membraneframework.rtc.events.TracksRemoved.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/data.html","searchKeys":["data","val data: TracksRemoved.Data","org.membraneframework.rtc.events.TracksRemoved.data"]},{"name":"val data: UpdatePeerMetadata.Data","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/data.html","searchKeys":["data","val data: UpdatePeerMetadata.Data","org.membraneframework.rtc.events.UpdatePeerMetadata.data"]},{"name":"val data: UpdateTrackMetadata.Data","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.data","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/data.html","searchKeys":["data","val data: UpdateTrackMetadata.Data","org.membraneframework.rtc.events.UpdateTrackMetadata.data"]},{"name":"val dimensions: Dimensions","description":"org.membraneframework.rtc.media.VideoParameters.dimensions","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/dimensions.html","searchKeys":["dimensions","val dimensions: Dimensions","org.membraneframework.rtc.media.VideoParameters.dimensions"]},{"name":"val eglContext: EglBase.Context","description":"org.membraneframework.rtc.media.VideoTrack.eglContext","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-track/egl-context.html","searchKeys":["eglContext","val eglContext: EglBase.Context","org.membraneframework.rtc.media.VideoTrack.eglContext"]},{"name":"val enableH264HighProfile: Boolean = false","description":"org.membraneframework.rtc.EncoderOptions.enableH264HighProfile","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-options/enable-h264-high-profile.html","searchKeys":["enableH264HighProfile","val enableH264HighProfile: Boolean = false","org.membraneframework.rtc.EncoderOptions.enableH264HighProfile"]},{"name":"val enableIntelVp8Encoder: Boolean = true","description":"org.membraneframework.rtc.EncoderOptions.enableIntelVp8Encoder","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-options/enable-intel-vp8-encoder.html","searchKeys":["enableIntelVp8Encoder","val enableIntelVp8Encoder: Boolean = true","org.membraneframework.rtc.EncoderOptions.enableIntelVp8Encoder"]},{"name":"val enabled: Boolean = false","description":"org.membraneframework.rtc.SimulcastConfig.enabled","location":"-membrane-r-t-c/org.membraneframework.rtc/-simulcast-config/enabled.html","searchKeys":["enabled","val enabled: Boolean = false","org.membraneframework.rtc.SimulcastConfig.enabled"]},{"name":"val encoderOptions: EncoderOptions","description":"org.membraneframework.rtc.ConnectOptions.encoderOptions","location":"-membrane-r-t-c/org.membraneframework.rtc/-connect-options/encoder-options.html","searchKeys":["encoderOptions","val encoderOptions: EncoderOptions","org.membraneframework.rtc.ConnectOptions.encoderOptions"]},{"name":"val encoderType: EncoderType","description":"org.membraneframework.rtc.EncoderOptions.encoderType","location":"-membrane-r-t-c/org.membraneframework.rtc/-encoder-options/encoder-type.html","searchKeys":["encoderType","val encoderType: EncoderType","org.membraneframework.rtc.EncoderOptions.encoderType"]},{"name":"val height: Int","description":"org.membraneframework.rtc.media.Dimensions.height","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-dimensions/height.html","searchKeys":["height","val height: Int","org.membraneframework.rtc.media.Dimensions.height"]},{"name":"val id: String","description":"org.membraneframework.rtc.events.PeerAccepted.Data.id","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/-data/id.html","searchKeys":["id","val id: String","org.membraneframework.rtc.events.PeerAccepted.Data.id"]},{"name":"val id: String","description":"org.membraneframework.rtc.models.Peer.id","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/id.html","searchKeys":["id","val id: String","org.membraneframework.rtc.models.Peer.id"]},{"name":"val integratedTurnServers: List<OfferData.TurnServer>","description":"org.membraneframework.rtc.events.OfferData.Data.integratedTurnServers","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-data/integrated-turn-servers.html","searchKeys":["integratedTurnServers","val integratedTurnServers: List<OfferData.TurnServer>","org.membraneframework.rtc.events.OfferData.Data.integratedTurnServers"]},{"name":"val limit: Int","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit.limit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-bandwidth-limit/limit.html","searchKeys":["limit","val limit: Int","org.membraneframework.rtc.media.TrackBandwidthLimit.BandwidthLimit.limit"]},{"name":"val limit: Map<String, TrackBandwidthLimit.BandwidthLimit>","description":"org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit.limit","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-track-bandwidth-limit/-simulcast-bandwidth-limit/limit.html","searchKeys":["limit","val limit: Map<String, TrackBandwidthLimit.BandwidthLimit>","org.membraneframework.rtc.media.TrackBandwidthLimit.SimulcastBandwidthLimit.limit"]},{"name":"val maxBitrate: TrackBandwidthLimit","description":"org.membraneframework.rtc.media.VideoParameters.maxBitrate","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/max-bitrate.html","searchKeys":["maxBitrate","val maxBitrate: TrackBandwidthLimit","org.membraneframework.rtc.media.VideoParameters.maxBitrate"]},{"name":"val maxFps: Int","description":"org.membraneframework.rtc.media.VideoParameters.maxFps","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/max-fps.html","searchKeys":["maxFps","val maxFps: Int","org.membraneframework.rtc.media.VideoParameters.maxFps"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.events.Join.Data.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/-data/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.events.Join.Data.metadata"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.events.PeerUpdated.Data.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/-data/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.events.PeerUpdated.Data.metadata"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.events.TrackUpdated.Data.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-data/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.events.TrackUpdated.Data.metadata"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.Data.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/-data/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.events.UpdatePeerMetadata.Data.metadata"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.models.Peer.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.models.Peer.metadata"]},{"name":"val metadata: Metadata","description":"org.membraneframework.rtc.models.TrackContext.metadata","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/metadata.html","searchKeys":["metadata","val metadata: Metadata","org.membraneframework.rtc.models.TrackContext.metadata"]},{"name":"val midToTrackId: Map<String, String>","description":"org.membraneframework.rtc.events.SdpAnswer.Data.midToTrackId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-data/mid-to-track-id.html","searchKeys":["midToTrackId","val midToTrackId: Map<String, String>","org.membraneframework.rtc.events.SdpAnswer.Data.midToTrackId"]},{"name":"val password: String","description":"org.membraneframework.rtc.events.OfferData.TurnServer.password","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/password.html","searchKeys":["password","val password: String","org.membraneframework.rtc.events.OfferData.TurnServer.password"]},{"name":"val peer: Peer","description":"org.membraneframework.rtc.events.PeerJoined.Data.peer","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/-data/peer.html","searchKeys":["peer","val peer: Peer","org.membraneframework.rtc.events.PeerJoined.Data.peer"]},{"name":"val peer: Peer","description":"org.membraneframework.rtc.models.TrackContext.peer","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/peer.html","searchKeys":["peer","val peer: Peer","org.membraneframework.rtc.models.TrackContext.peer"]},{"name":"val peerId: String","description":"org.membraneframework.rtc.events.PeerLeft.Data.peerId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/-data/peer-id.html","searchKeys":["peerId","val peerId: String","org.membraneframework.rtc.events.PeerLeft.Data.peerId"]},{"name":"val peerId: String","description":"org.membraneframework.rtc.events.PeerUpdated.Data.peerId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/-data/peer-id.html","searchKeys":["peerId","val peerId: String","org.membraneframework.rtc.events.PeerUpdated.Data.peerId"]},{"name":"val peerId: String","description":"org.membraneframework.rtc.events.TrackUpdated.Data.peerId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-data/peer-id.html","searchKeys":["peerId","val peerId: String","org.membraneframework.rtc.events.TrackUpdated.Data.peerId"]},{"name":"val peerId: String","description":"org.membraneframework.rtc.events.TracksAdded.Data.peerId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/-data/peer-id.html","searchKeys":["peerId","val peerId: String","org.membraneframework.rtc.events.TracksAdded.Data.peerId"]},{"name":"val peerId: String","description":"org.membraneframework.rtc.events.TracksRemoved.Data.peerId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/-data/peer-id.html","searchKeys":["peerId","val peerId: String","org.membraneframework.rtc.events.TracksRemoved.Data.peerId"]},{"name":"val peersInRoom: List<Peer>","description":"org.membraneframework.rtc.events.PeerAccepted.Data.peersInRoom","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/-data/peers-in-room.html","searchKeys":["peersInRoom","val peersInRoom: List<Peer>","org.membraneframework.rtc.events.PeerAccepted.Data.peersInRoom"]},{"name":"val presetFHD169: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetFHD169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-f-h-d169.html","searchKeys":["presetFHD169","val presetFHD169: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetFHD169"]},{"name":"val presetFHD43: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetFHD43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-f-h-d43.html","searchKeys":["presetFHD43","val presetFHD43: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetFHD43"]},{"name":"val presetHD169: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetHD169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-h-d169.html","searchKeys":["presetHD169","val presetHD169: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetHD169"]},{"name":"val presetHD43: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetHD43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-h-d43.html","searchKeys":["presetHD43","val presetHD43: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetHD43"]},{"name":"val presetQHD169: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetQHD169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-q-h-d169.html","searchKeys":["presetQHD169","val presetQHD169: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetQHD169"]},{"name":"val presetQHD43: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetQHD43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-q-h-d43.html","searchKeys":["presetQHD43","val presetQHD43: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetQHD43"]},{"name":"val presetQVGA169: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetQVGA169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-q-v-g-a169.html","searchKeys":["presetQVGA169","val presetQVGA169: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetQVGA169"]},{"name":"val presetQVGA43: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetQVGA43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-q-v-g-a43.html","searchKeys":["presetQVGA43","val presetQVGA43: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetQVGA43"]},{"name":"val presetScreenShareFHD15: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareFHD15","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-screen-share-f-h-d15.html","searchKeys":["presetScreenShareFHD15","val presetScreenShareFHD15: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareFHD15"]},{"name":"val presetScreenShareFHD30: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareFHD30","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-screen-share-f-h-d30.html","searchKeys":["presetScreenShareFHD30","val presetScreenShareFHD30: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareFHD30"]},{"name":"val presetScreenShareHD15: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareHD15","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-screen-share-h-d15.html","searchKeys":["presetScreenShareHD15","val presetScreenShareHD15: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareHD15"]},{"name":"val presetScreenShareHD5: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareHD5","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-screen-share-h-d5.html","searchKeys":["presetScreenShareHD5","val presetScreenShareHD5: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareHD5"]},{"name":"val presetScreenShareVGA: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareVGA","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-screen-share-v-g-a.html","searchKeys":["presetScreenShareVGA","val presetScreenShareVGA: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetScreenShareVGA"]},{"name":"val presetVGA169: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetVGA169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-v-g-a169.html","searchKeys":["presetVGA169","val presetVGA169: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetVGA169"]},{"name":"val presetVGA43: VideoParameters","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetVGA43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/preset-v-g-a43.html","searchKeys":["presetVGA43","val presetVGA43: VideoParameters","org.membraneframework.rtc.media.VideoParameters.Companion.presetVGA43"]},{"name":"val presets169: List<VideoParameters>","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presets169","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/presets169.html","searchKeys":["presets169","val presets169: List<VideoParameters>","org.membraneframework.rtc.media.VideoParameters.Companion.presets169"]},{"name":"val presets43: List<VideoParameters>","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presets43","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/presets43.html","searchKeys":["presets43","val presets43: List<VideoParameters>","org.membraneframework.rtc.media.VideoParameters.Companion.presets43"]},{"name":"val presetsScreenShare: List<VideoParameters>","description":"org.membraneframework.rtc.media.VideoParameters.Companion.presetsScreenShare","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/-companion/presets-screen-share.html","searchKeys":["presetsScreenShare","val presetsScreenShare: List<VideoParameters>","org.membraneframework.rtc.media.VideoParameters.Companion.presetsScreenShare"]},{"name":"val reason: String","description":"org.membraneframework.rtc.MembraneRTCError.RTC.reason","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-r-t-c/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.MembraneRTCError.RTC.reason"]},{"name":"val reason: String","description":"org.membraneframework.rtc.MembraneRTCError.Transport.reason","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-transport/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.MembraneRTCError.Transport.reason"]},{"name":"val reason: String","description":"org.membraneframework.rtc.MembraneRTCError.Unknown.reason","location":"-membrane-r-t-c/org.membraneframework.rtc/-membrane-r-t-c-error/-unknown/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.MembraneRTCError.Unknown.reason"]},{"name":"val reason: String","description":"org.membraneframework.rtc.transport.EventTransportError.ConnectionError.reason","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-connection-error/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.transport.EventTransportError.ConnectionError.reason"]},{"name":"val reason: String","description":"org.membraneframework.rtc.transport.EventTransportError.Unauthorized.reason","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unauthorized/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.transport.EventTransportError.Unauthorized.reason"]},{"name":"val reason: String","description":"org.membraneframework.rtc.transport.EventTransportError.Unexpected.reason","location":"-membrane-r-t-c/org.membraneframework.rtc.transport/-event-transport-error/-unexpected/reason.html","searchKeys":["reason","val reason: String","org.membraneframework.rtc.transport.EventTransportError.Unexpected.reason"]},{"name":"val rid: String","description":"org.membraneframework.rtc.TrackEncoding.rid","location":"-membrane-r-t-c/org.membraneframework.rtc/-track-encoding/rid.html","searchKeys":["rid","val rid: String","org.membraneframework.rtc.TrackEncoding.rid"]},{"name":"val sdp: String","description":"org.membraneframework.rtc.events.SdpAnswer.Data.sdp","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-data/sdp.html","searchKeys":["sdp","val sdp: String","org.membraneframework.rtc.events.SdpAnswer.Data.sdp"]},{"name":"val sdpMLineIndex: Int","description":"org.membraneframework.rtc.events.RemoteCandidate.Data.sdpMLineIndex","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-data/sdp-m-line-index.html","searchKeys":["sdpMLineIndex","val sdpMLineIndex: Int","org.membraneframework.rtc.events.RemoteCandidate.Data.sdpMLineIndex"]},{"name":"val sdpMid: String?","description":"org.membraneframework.rtc.events.RemoteCandidate.Data.sdpMid","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/-data/sdp-mid.html","searchKeys":["sdpMid","val sdpMid: String?","org.membraneframework.rtc.events.RemoteCandidate.Data.sdpMid"]},{"name":"val serverAddr: String","description":"org.membraneframework.rtc.events.OfferData.TurnServer.serverAddr","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/server-addr.html","searchKeys":["serverAddr","val serverAddr: String","org.membraneframework.rtc.events.OfferData.TurnServer.serverAddr"]},{"name":"val serverPort: UInt","description":"org.membraneframework.rtc.events.OfferData.TurnServer.serverPort","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/server-port.html","searchKeys":["serverPort","val serverPort: UInt","org.membraneframework.rtc.events.OfferData.TurnServer.serverPort"]},{"name":"val simulcastConfig: SimulcastConfig","description":"org.membraneframework.rtc.media.VideoParameters.simulcastConfig","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-video-parameters/simulcast-config.html","searchKeys":["simulcastConfig","val simulcastConfig: SimulcastConfig","org.membraneframework.rtc.media.VideoParameters.simulcastConfig"]},{"name":"val track: RemoteTrack?","description":"org.membraneframework.rtc.models.TrackContext.track","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/track.html","searchKeys":["track","val track: RemoteTrack?","org.membraneframework.rtc.models.TrackContext.track"]},{"name":"val trackId: String","description":"org.membraneframework.rtc.events.TrackUpdated.Data.trackId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/-data/track-id.html","searchKeys":["trackId","val trackId: String","org.membraneframework.rtc.events.TrackUpdated.Data.trackId"]},{"name":"val trackId: String","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.Data.trackId","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-data/track-id.html","searchKeys":["trackId","val trackId: String","org.membraneframework.rtc.events.UpdateTrackMetadata.Data.trackId"]},{"name":"val trackId: String","description":"org.membraneframework.rtc.models.TrackContext.trackId","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-track-context/track-id.html","searchKeys":["trackId","val trackId: String","org.membraneframework.rtc.models.TrackContext.trackId"]},{"name":"val trackIdToMetadata: Map<String, Metadata>","description":"org.membraneframework.rtc.events.TracksAdded.Data.trackIdToMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/-data/track-id-to-metadata.html","searchKeys":["trackIdToMetadata","val trackIdToMetadata: Map<String, Metadata>","org.membraneframework.rtc.events.TracksAdded.Data.trackIdToMetadata"]},{"name":"val trackIdToMetadata: Map<String, Metadata>","description":"org.membraneframework.rtc.models.Peer.trackIdToMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.models/-peer/track-id-to-metadata.html","searchKeys":["trackIdToMetadata","val trackIdToMetadata: Map<String, Metadata>","org.membraneframework.rtc.models.Peer.trackIdToMetadata"]},{"name":"val trackIds: List<String>","description":"org.membraneframework.rtc.events.TracksRemoved.Data.trackIds","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/-data/track-ids.html","searchKeys":["trackIds","val trackIds: List<String>","org.membraneframework.rtc.events.TracksRemoved.Data.trackIds"]},{"name":"val trackMetadata: Metadata","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.Data.trackMetadata","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/-data/track-metadata.html","searchKeys":["trackMetadata","val trackMetadata: Metadata","org.membraneframework.rtc.events.UpdateTrackMetadata.Data.trackMetadata"]},{"name":"val tracksTypes: Map<String, Int>","description":"org.membraneframework.rtc.events.OfferData.Data.tracksTypes","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-data/tracks-types.html","searchKeys":["tracksTypes","val tracksTypes: Map<String, Int>","org.membraneframework.rtc.events.OfferData.Data.tracksTypes"]},{"name":"val transport: EventTransport","description":"org.membraneframework.rtc.ConnectOptions.transport","location":"-membrane-r-t-c/org.membraneframework.rtc/-connect-options/transport.html","searchKeys":["transport","val transport: EventTransport","org.membraneframework.rtc.ConnectOptions.transport"]},{"name":"val transport: String","description":"org.membraneframework.rtc.events.OfferData.TurnServer.transport","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/transport.html","searchKeys":["transport","val transport: String","org.membraneframework.rtc.events.OfferData.TurnServer.transport"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.BaseCustomEvent.Data.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/-data/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.BaseCustomEvent.Data.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.BaseCustomEvent.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-base-custom-event/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.BaseCustomEvent.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.CustomEvent.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-custom-event/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.CustomEvent.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.OfferData.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.OfferData.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.PeerAccepted.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-accepted/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.PeerAccepted.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.PeerDenied.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-denied/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.PeerDenied.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.PeerJoined.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-joined/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.PeerJoined.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.PeerLeft.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-left/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.PeerLeft.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.PeerUpdated.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-peer-updated/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.PeerUpdated.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.RemoteCandidate.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-remote-candidate/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.RemoteCandidate.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.SdpAnswer.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.SdpAnswer.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.TrackUpdated.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-track-updated/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.TrackUpdated.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.TracksAdded.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-added/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.TracksAdded.type"]},{"name":"val type: ReceivableEventType","description":"org.membraneframework.rtc.events.TracksRemoved.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-tracks-removed/type.html","searchKeys":["type","val type: ReceivableEventType","org.membraneframework.rtc.events.TracksRemoved.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.Join.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-join/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.Join.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.LocalCandidate.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-local-candidate/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.LocalCandidate.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.RenegotiateTracks.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-renegotiate-tracks/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.RenegotiateTracks.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.SdpAnswer.Data.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-answer/-data/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.SdpAnswer.Data.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.SdpOffer.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-sdp-offer/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.SdpOffer.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.SelectEncoding.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-select-encoding/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.SelectEncoding.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.UpdatePeerMetadata.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-peer-metadata/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.UpdatePeerMetadata.type"]},{"name":"val type: String","description":"org.membraneframework.rtc.events.UpdateTrackMetadata.type","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-update-track-metadata/type.html","searchKeys":["type","val type: String","org.membraneframework.rtc.events.UpdateTrackMetadata.type"]},{"name":"val username: String","description":"org.membraneframework.rtc.events.OfferData.TurnServer.username","location":"-membrane-r-t-c/org.membraneframework.rtc.events/-offer-data/-turn-server/username.html","searchKeys":["username","val username: String","org.membraneframework.rtc.events.OfferData.TurnServer.username"]},{"name":"val videoParameters: VideoParameters","description":"org.membraneframework.rtc.media.LocalScreencastTrack.videoParameters","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/video-parameters.html","searchKeys":["videoParameters","val videoParameters: VideoParameters","org.membraneframework.rtc.media.LocalScreencastTrack.videoParameters"]},{"name":"val videoParameters: VideoParameters","description":"org.membraneframework.rtc.media.LocalVideoTrack.videoParameters","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-video-track/video-parameters.html","searchKeys":["videoParameters","val videoParameters: VideoParameters","org.membraneframework.rtc.media.LocalVideoTrack.videoParameters"]},{"name":"val width: Int","description":"org.membraneframework.rtc.media.Dimensions.width","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-dimensions/width.html","searchKeys":["width","val width: Int","org.membraneframework.rtc.media.Dimensions.width"]},{"name":"var callbacks: ArrayList<() -> Unit>","description":"org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.callbacks","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-screencast-track/-projection-callback/callbacks.html","searchKeys":["callbacks","var callbacks: ArrayList<() -> Unit>","org.membraneframework.rtc.media.LocalScreencastTrack.ProjectionCallback.callbacks"]},{"name":"var mediaTrack: AudioTrack","description":"org.membraneframework.rtc.media.LocalAudioTrack.mediaTrack","location":"-membrane-r-t-c/org.membraneframework.rtc.media/-local-audio-track/media-track.html","searchKeys":["mediaTrack","var mediaTrack: AudioTrack","org.membraneframework.rtc.media.LocalAudioTrack.mediaTrack"]}]
